{
  "Step 13 + 14 - Trees + BST": [
    "step_13_+_14_-_trees_+_bst_bfs-traversals",
    "step_13_+_14_-_trees_+_bst_serialise-deserialise",
    "step_13_+_14_-_trees_+_bst_convert-sorted-arr-to-bst",
    "step_13_+_14_-_trees_+_bst_kth-smallest-element-in-bst",
    "step_13_+_14_-_trees_+_bst_same-tree",
    "step_13_+_14_-_trees_+_bst_subtree-of-another-tree",
    "step_13_+_14_-_trees_+_bst_diameter-of-binary-tree",
    "step_13_+_14_-_trees_+_bst_max-depth-of-binary-tree",
    "step_13_+_14_-_trees_+_bst_max-path-sum",
    "step_13_+_14_-_trees_+_bst_search-in-bst",
    "step_13_+_14_-_trees_+_bst_validate-bst",
    "step_13_+_14_-_trees_+_bst_binary-tree-right-side-view",
    "step_13_+_14_-_trees_+_bst_construct-binary-tree-from-pre-in-traversal",
    "step_13_+_14_-_trees_+_bst_count-good-nodes",
    "step_13_+_14_-_trees_+_bst_dfs-traversals",
    "step_13_+_14_-_trees_+_bst_lowest-common-ancestor",
    "step_13_+_14_-_trees_+_bst_balanced-binary-tree",
    "step_13_+_14_-_trees_+_bst_invert-binary-tree"
  ],
  "Step 09 - Stacks Queues": [
    "step_09_-_stacks_queues_min-stack",
    "step_09_-_stacks_queues_trapping-rainwater",
    "step_09_-_stacks_queues_stack-using-two-queue",
    "step_09_-_stacks_queues_asteroid-collision",
    "step_09_-_stacks_queues_sum-of-subarray-minimums",
    "step_09_-_stacks_queues_crawler-log-folder",
    "step_09_-_stacks_queues_stack-using-one-queue",
    "step_09_-_stacks_queues_queue-using-stack",
    "step_09_-_stacks_queues_next-smaller",
    "step_09_-_stacks_queues_valid-parantheses",
    "step_09_-_stacks_queues_maximal-rectangle",
    "step_09_-_stacks_queues_stock-span",
    "step_09_-_stacks_queues_remove-k-digits",
    "step_09_-_stacks_queues_next-greater-element-2",
    "step_09_-_stacks_queues_number-of-nges-to-the-right",
    "step_09_-_stacks_queues_stack-using-linkedlist",
    "step_09_-_stacks_queues_sliding-window-max",
    "step_09_-_stacks_queues_sum-of-subarray-ranges",
    "step_09_-_stacks_queues_largest-rectangle-in-histogram"
  ],
  "INFIX-PREFIX-POSTFIX": [
    "infix-prefix-postfix_prefix-infix",
    "infix-prefix-postfix_prefix-postfix",
    "infix-prefix-postfix_postfix-prefix",
    "infix-prefix-postfix_infix-prefix",
    "infix-prefix-postfix_infix-postfix",
    "infix-prefix-postfix_postfix-infix"
  ],
  "Step 15 - Graphs": [
    "step_15_-_graphs_cheapest-flight-k-stops",
    "step_15_-_graphs_enclaves",
    "step_15_-_graphs_make-a-large-island",
    "step_15_-_graphs_bipartite-graph",
    "step_15_-_graphs_minimum-effort-path",
    "step_15_-_graphs_most-stones-removed-within-same-row",
    "step_15_-_graphs_aliens-dictionary",
    "step_15_-_graphs_eventual-safe-states",
    "step_15_-_graphs_num-ways-to-arrive-at-destination",
    "step_15_-_graphs_number-provinces",
    "step_15_-_graphs_mst-kruskal-algo",
    "step_15_-_graphs_dfs",
    "step_15_-_graphs_djikstra-algorithm",
    "step_15_-_graphs_mst-prims-algorithm",
    "step_15_-_graphs_undirected-graph-cycle-dfs",
    "step_15_-_graphs_bfs",
    "step_15_-_graphs_disjoint-set-implementation",
    "step_15_-_graphs_smallest-distance-threshold",
    "step_15_-_graphs_directed-graph-cycle-dfs",
    "step_15_-_graphs_min-multiplications-to-reach-end",
    "step_15_-_graphs_01-matrix",
    "step_15_-_graphs_floyd-warshall",
    "step_15_-_graphs_binary-maze-shortest-path",
    "step_15_-_graphs_topological-sort-dfs",
    "step_15_-_graphs_word-ladder-2",
    "step_15_-_graphs_shortest-path-ug",
    "step_15_-_graphs_word-ladder-1",
    "step_15_-_graphs_topological-sort-bfs-kahns-algo",
    "step_15_-_graphs_operations-to-make-network-connected",
    "step_15_-_graphs_rotten-oranges",
    "step_15_-_graphs_account-merge",
    "step_15_-_graphs_bellman-ford",
    "step_15_-_graphs_undirected-graph-cycle-bfs",
    "step_15_-_graphs_directed-graph-cycle-bfs",
    "step_15_-_graphs_course-schedule-2",
    "step_15_-_graphs_network-delay",
    "step_15_-_graphs_course-schedule-1",
    "step_15_-_graphs_surrounded-regions",
    "step_15_-_graphs_flood-fill"
  ],
  "Step 02 - Sorting Techniques": [
    "step_02_-_sorting_techniques_bubble-sort",
    "step_02_-_sorting_techniques_merge-sort",
    "step_02_-_sorting_techniques_selection-sort",
    "step_02_-_sorting_techniques_quick-sort",
    "step_02_-_sorting_techniques_insertion-sort"
  ],
  "Step 16 - Dynamic Programming": [
    "step_16_-_dynamic_programming_subseq-05-partn-with-given-diff",
    "step_16_-_dynamic_programming_subseq-03-partition-arr-to-min-sum-diff",
    "step_16_-_dynamic_programming_minimal-cost",
    "step_16_-_dynamic_programming_choco-pickup",
    "step_16_-_dynamic_programming_stocks-6",
    "step_16_-_dynamic_programming_shortest-common-superseq",
    "step_16_-_dynamic_programming_subseq-09-knapsack",
    "step_16_-_dynamic_programming_stocks-4",
    "step_16_-_dynamic_programming_stocks-5",
    "step_16_-_dynamic_programming_stocks-2",
    "step_16_-_dynamic_programming_subseq-08-coin-change2",
    "step_16_-_dynamic_programming_subseq-04-count-subset-eq-to-given-sum",
    "step_16_-_dynamic_programming_climbing-stairs",
    "step_16_-_dynamic_programming_subseq-07-target-sum",
    "step_16_-_dynamic_programming_longest-palindromic-subseq",
    "step_16_-_dynamic_programming_subseq-06-coin-change",
    "step_16_-_dynamic_programming_subseq-01-subset-sum-problem",
    "step_16_-_dynamic_programming_lis-02-print-lis",
    "step_16_-_dynamic_programming_mcm-01-mcm",
    "step_16_-_dynamic_programming_subseq-10-rod-cutting",
    "step_16_-_dynamic_programming_delete-operationg-make-string-same",
    "step_16_-_dynamic_programming_longest-common-subseq",
    "step_16_-_dynamic_programming_lis-04-number-lis",
    "step_16_-_dynamic_programming_distinct-subseq",
    "step_16_-_dynamic_programming_burst-balloon-02",
    "step_16_-_dynamic_programming_subseq-02-partition-equal-subset-sum",
    "step_16_-_dynamic_programming_min-path-sum-triangle",
    "step_16_-_dynamic_programming_lis-03-largest-div-subset",
    "step_16_-_dynamic_programming_min-insertions-to-make-string-palindrome",
    "step_16_-_dynamic_programming_frog-jump",
    "step_16_-_dynamic_programming_mcm-02-min-cost-to-cut-stick",
    "step_16_-_dynamic_programming_stocks-1",
    "step_16_-_dynamic_programming_min-falling-path-sum",
    "step_16_-_dynamic_programming_dp-square-count-submatrics",
    "step_16_-_dynamic_programming_edit-distance",
    "step_16_-_dynamic_programming_lis-05-bitonic",
    "step_16_-_dynamic_programming_stocks-3",
    "step_16_-_dynamic_programming_print-longest-common-subseq",
    "step_16_-_dynamic_programming_lis-06-longest-string-chain",
    "step_16_-_dynamic_programming_0-1-knapsack",
    "step_16_-_dynamic_programming_unique-paths-2",
    "step_16_-_dynamic_programming_wildcard-matching",
    "step_16_-_dynamic_programming_lis-01-implement",
    "step_16_-_dynamic_programming_ninjas-training",
    "step_16_-_dynamic_programming_house-robber-2",
    "step_16_-_dynamic_programming_unique-paths-1",
    "step_16_-_dynamic_programming_house-robber-1",
    "step_16_-_dynamic_programming_longest-common-substring"
  ],
  "Step 06 - Linked List": [
    "step_06_-_linked_list_intersection-of-ll",
    "step_06_-_linked_list_length-of-cycle",
    "step_06_-_linked_list_flatten-dll",
    "step_06_-_linked_list_split-linked-list-in-parts",
    "step_06_-_linked_list_pairs-in-dll",
    "step_06_-_linked_list_flatten-ll",
    "step_06_-_linked_list_palindrome",
    "step_06_-_linked_list_rotate-list",
    "step_06_-_linked_list_remove-duplicates-dll",
    "step_06_-_linked_list_sort-list",
    "step_06_-_linked_list_remove-nth-node",
    "step_06_-_linked_list_detect-cycle",
    "step_06_-_linked_list_odd-even-grouping",
    "step_06_-_linked_list_reverse-ll",
    "step_06_-_linked_list_detect-cycle-ii",
    "step_06_-_linked_list_insert-node-dll",
    "step_06_-_linked_list_insert-gcd-in-linked-list",
    "step_06_-_linked_list_remove-nodes-dll",
    "step_06_-_linked_list_add-two-numbers",
    "step_06_-_linked_list_tortoise-hair-method",
    "step_06_-_linked_list_clone-list",
    "step_06_-_linked_list_sort-0s-1s-2s",
    "step_06_-_linked_list_reverse-dll",
    "step_06_-_linked_list_reverse-nodes-in-group-of-k"
  ],
  "DESIGN BASED": [
    "design_based_lfu-cache",
    "design_based_lru-cache"
  ],
  "Step 04 - Binary Search": [
    "step_04_-_binary_search_painters-partition",
    "step_04_-_binary_search_2d-matrix-binary-search",
    "step_04_-_binary_search_2d-matrix-bs-hard",
    "step_04_-_binary_search_first-last-index",
    "step_04_-_binary_search_min-in-rotated-array",
    "step_04_-_binary_search_ship-packages",
    "step_04_-_binary_search_split-largest",
    "step_04_-_binary_search_nth-root",
    "step_04_-_binary_search_aggressive-cows",
    "step_04_-_binary_search_max-1s-row",
    "step_04_-_binary_search_sqrt",
    "step_04_-_binary_search_kth-missing-pos",
    "step_04_-_binary_search_median-of-two-sorted-arr",
    "step_04_-_binary_search_search-rot-sorted-1",
    "step_04_-_binary_search_gas-stations",
    "step_04_-_binary_search_koko-eating-bananas",
    "step_04_-_binary_search_rotation",
    "step_04_-_binary_search_book-allocation-problem",
    "step_04_-_binary_search_ceil-floor",
    "step_04_-_binary_search_peak-element",
    "step_04_-_binary_search_peak-element-02",
    "step_04_-_binary_search_single-element",
    "step_04_-_binary_search_search-insert-position",
    "step_04_-_binary_search_smallest-divisor",
    "step_04_-_binary_search_min-days-m-bouqets",
    "step_04_-_binary_search_median-in-matrix",
    "step_04_-_binary_search_search-rot-sorted-2"
  ],
  "Step 17 - Tries": [
    "step_17_-_tries_word-search-2",
    "step_17_-_tries_dp-on-tries-min-valid-substring",
    "step_17_-_tries_implement-trie",
    "step_17_-_tries_design-add-search-data-structure"
  ],
  "Step 05 + 18 - Strings": [
    "step_05_+_18_-_strings_rabin-karp-repeated-string-match",
    "step_05_+_18_-_strings_longest-happy-prefix",
    "step_05_+_18_-_strings_longest-common-prefix",
    "step_05_+_18_-_strings_sort-chars-by-freq",
    "step_05_+_18_-_strings_roman-to-int",
    "step_05_+_18_-_strings_implement-atoi",
    "step_05_+_18_-_strings_find-index-of-first-occurence",
    "step_05_+_18_-_strings_count-palindromic-subseq",
    "step_05_+_18_-_strings_valid-anagrams",
    "step_05_+_18_-_strings_check-rotation",
    "step_05_+_18_-_strings_longest-palindromic-substr",
    "step_05_+_18_-_strings_remove-outer-paranth",
    "step_05_+_18_-_strings_kmp-pattern-matching",
    "step_05_+_18_-_strings_max-score-from-removing-substr",
    "step_05_+_18_-_strings_sum-of-beauty-of-all-substr",
    "step_05_+_18_-_strings_largest-odd-num-in-string",
    "step_05_+_18_-_strings_min-add-to-make-parantheses",
    "step_05_+_18_-_strings_rev-words",
    "step_05_+_18_-_strings_shortest-palindrome",
    "step_05_+_18_-_strings_count-say",
    "step_05_+_18_-_strings_count-substrs"
  ],
  "Step 07 - Recursion": [
    "step_07_-_recursion_rat-in-a-maze",
    "step_07_-_recursion_combination-sum-2",
    "step_07_-_recursion_subsets",
    "step_07_-_recursion_combination-sum-3",
    "step_07_-_recursion_generate-all-bin-strings",
    "step_07_-_recursion_word-break",
    "step_07_-_recursion_better-string",
    "step_07_-_recursion_n-queen",
    "step_07_-_recursion_subset-sum-1",
    "step_07_-_recursion_subset-sum-2",
    "step_07_-_recursion_reverse-stack",
    "step_07_-_recursion_word-search",
    "step_07_-_recursion_phone-number",
    "step_07_-_recursion_m-coloring-problem",
    "step_07_-_recursion_combination-sum-1",
    "step_07_-_recursion_palindrome-partitioning",
    "step_07_-_recursion_sudoku-solver",
    "step_07_-_recursion_generate-parantheses"
  ],
  "Step 10 - Sliding Window": [
    "step_10_-_sliding_window_substring-containing-all-three-chars",
    "step_10_-_sliding_window_longest-substr-rep-chars",
    "step_10_-_sliding_window_count-k-uniq-elem-subarray",
    "step_10_-_sliding_window_min-window-substring",
    "step_10_-_sliding_window_fruits-baskets",
    "step_10_-_sliding_window_max-consec-ones",
    "step_10_-_sliding_window_longest-k-uniq-chars-substring",
    "step_10_-_sliding_window_longest-rep-chars-replace",
    "step_10_-_sliding_window_binary-subarr-with-goal",
    "step_10_-_sliding_window_nice-subarray",
    "step_10_-_sliding_window_max-points-obtained-from-cards"
  ],
  "Step 01 - Basics": [
    "step_01_-_basics_check-palindrome",
    "step_01_-_basics_lcm-gcd",
    "step_01_-_basics_armstrong-number",
    "step_01_-_basics_count-primes",
    "step_01_-_basics_all-divisors",
    "step_01_-_basics_reverse-number"
  ],
  "Step 11 - Heaps": [
    "step_11_-_heaps_divide-arr-in-sets-of-k-consec-numbers",
    "step_11_-_heaps_replace-with-rank",
    "step_11_-_heaps_median-data-stream",
    "step_11_-_heaps_max-combination-sum",
    "step_11_-_heaps_task-scheduler",
    "step_11_-_heaps_merge-k-sorted-arr",
    "step_11_-_heaps_heap-sort",
    "step_11_-_heaps_kth-largest-in-stream",
    "step_11_-_heaps_design-twitter",
    "step_11_-_heaps_intro-implement",
    "step_11_-_heaps_merge-k-linkedlists",
    "step_11_-_heaps_min-cost-of-rope",
    "step_11_-_heaps_k-most-frequent",
    "step_11_-_heaps_kth-largest"
  ],
  "Step 03 - Arrays": [
    "step_03_-_arrays_max-product-subarr",
    "step_03_-_arrays_longest-subarr-with-sum-k",
    "step_03_-_arrays_set-matrix-zero",
    "step_03_-_arrays_rotate-image",
    "step_03_-_arrays_subarr-sum-eq-k",
    "step_03_-_arrays_merge-sorted-arr",
    "step_03_-_arrays_3-sum",
    "step_03_-_arrays_2-sum",
    "step_03_-_arrays_missing-repeating",
    "step_03_-_arrays_grumpy-bookstore-owner",
    "step_03_-_arrays_rotate-array-d-places",
    "step_03_-_arrays_contiguous-array",
    "step_03_-_arrays_rev-pairs",
    "step_03_-_arrays_count-inversions",
    "step_03_-_arrays_print-max-sum-subarr",
    "step_03_-_arrays_spiral-matrix",
    "step_03_-_arrays_3-sum-closest",
    "step_03_-_arrays_kth-element",
    "step_03_-_arrays_array-leaders",
    "step_03_-_arrays_move-zeros-to-end",
    "step_03_-_arrays_longest-consecutive-subseq",
    "step_03_-_arrays_pascal-triang",
    "step_03_-_arrays_merge-intervals",
    "step_03_-_arrays_spiral-matrix-iv",
    "step_03_-_arrays_sort-0s-1s-2s",
    "step_03_-_arrays_max-sum-subarray",
    "step_03_-_arrays_remove-duplicates-sorted-arr",
    "step_03_-_arrays_majority-element",
    "step_03_-_arrays_best-time-to-buy-sell-stock",
    "step_03_-_arrays_next-permutation",
    "step_03_-_arrays_largest-subarr-with-zero-sum",
    "step_03_-_arrays_4-sum",
    "step_03_-_arrays_majority-element-2",
    "step_03_-_arrays_subarr-with-xor-x",
    "step_03_-_arrays_union-find"
  ],
  "Step 08 - Bit Manipulation": [
    "step_08_-_bit_manipulation_set-unset-rightmost-unset",
    "step_08_-_bit_manipulation_sieve",
    "step_08_-_bit_manipulation_count-set-bits",
    "step_08_-_bit_manipulation_xor-l-to-r",
    "step_08_-_bit_manipulation_prime-factorisation",
    "step_08_-_bit_manipulation_all-div-of-a-num",
    "step_08_-_bit_manipulation_count-bits-to-flip-a-to-b",
    "step_08_-_bit_manipulation_check-ith-bit",
    "step_08_-_bit_manipulation_two-numbers-with-odd-occurence",
    "step_08_-_bit_manipulation_divide-two-int",
    "step_08_-_bit_manipulation_power-of-two"
  ],
  "Step 12 - Greedy Algorithm": [
    "step_12_-_greedy_algorithm_valid-parantheses-02",
    "step_12_-_greedy_algorithm_shortest-job-first",
    "step_12_-_greedy_algorithm_assign-cookies",
    "step_12_-_greedy_algorithm_jump-game-02",
    "step_12_-_greedy_algorithm_coin-change",
    "step_12_-_greedy_algorithm_fractional-knapsack",
    "step_12_-_greedy_algorithm_candy",
    "step_12_-_greedy_algorithm_n-meetings",
    "step_12_-_greedy_algorithm_jump-game-01",
    "step_12_-_greedy_algorithm_page-fault",
    "step_12_-_greedy_algorithm_min-number-platforms",
    "step_12_-_greedy_algorithm_insert-interval",
    "step_12_-_greedy_algorithm_merge-intervals",
    "step_12_-_greedy_algorithm_valid-parantheses-01",
    "step_12_-_greedy_algorithm_non-overlapping-intervals",
    "step_12_-_greedy_algorithm_job-seq-problem"
  ]
}