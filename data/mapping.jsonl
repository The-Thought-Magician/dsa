{"problem_id": "step_13_+_14_-_trees_+_bst_BFS-TRAVERSALS", "title": "Bfs Traversals", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/BFS-TRAVERSALS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/1. Learning/03. BFS.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_SERIALISE-DESERIALISE", "title": "Serialise Deserialise", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/SERIALISE-DESERIALISE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_CONVERT-SORTED-ARR-TO-BST", "title": "Convert Sorted Arr To Bst", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/CONVERT-SORTED-ARR-TO-BST.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/1. Concept/01. Intro to BST.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_KTH-SMALLEST-ELEMENT-IN-BST", "title": "Kth Smallest Element In Bst", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/KTH-SMALLEST-ELEMENT-IN-BST.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/05. Kth smallest element in BST.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_SAME-TREE", "title": "Same Tree", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/SAME-TREE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/05. Same Tree.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_SUBTREE-OF-ANOTHER-TREE", "title": "Subtree Of Another Tree", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/SUBTREE-OF-ANOTHER-TREE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/03. Diameter of Binary Tree.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_DIAMETER-OF-BINARY-TREE", "title": "Diameter Of Binary Tree", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/DIAMETER-OF-BINARY-TREE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/01. Height of binary tree.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_MAX-DEPTH-OF-BINARY-TREE", "title": "Max Depth Of Binary Tree", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/MAX-DEPTH-OF-BINARY-TREE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/03. Max width of binary tree.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_MAX-PATH-SUM", "title": "Max Path Sum", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/MAX-PATH-SUM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/04. Maximum Path Sum.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_SEARCH-IN-BST", "title": "Search In Bst", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/SEARCH-IN-BST.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/1. Concept/02. Search in BST.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_VALIDATE-BST", "title": "Validate Bst", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/VALIDATE-BST.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/06. Validate BST.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_BINARY-TREE-RIGHT-SIDE-VIEW", "title": "Binary Tree Right Side View", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/BINARY-TREE-RIGHT-SIDE-VIEW.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/13. Flatten Binary Tree.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_CONSTRUCT-BINARY-TREE-FROM-PRE-IN-TRAVERSAL", "title": "Construct Binary Tree From Pre In Traversal", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/CONSTRUCT-BINARY-TREE-FROM-PRE-IN-TRAVERSAL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/12. Largest BST in Binary Tree.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_COUNT-GOOD-NODES", "title": "Count Good Nodes", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/COUNT-GOOD-NODES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/1.Get Strong Hold/02.Count_good_numbers.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_DFS-TRAVERSALS", "title": "Dfs Traversals", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/DFS-TRAVERSALS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/1. Learning/04. DFS.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_LOWEST-COMMON-ANCESTOR", "title": "Lowest Common Ancestor", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/LOWEST-COMMON-ANCESTOR.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/02. Lowest Common Ancestor.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_BALANCED-BINARY-TREE", "title": "Balanced Binary Tree", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/BALANCED-BINARY-TREE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_13_+_14_-_trees_+_bst_INVERT-BINARY-TREE", "title": "Invert Binary Tree", "a2z_path": "Step 13 + 14 - Trees + BST", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 13 + 14 - Trees + BST/INVERT-BINARY-TREE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_MIN-STACK", "title": "Min Stack", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/MIN-STACK.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/1. Learning/07. Implement min stack.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_TRAPPING-RAINWATER", "title": "Trapping Rainwater", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/TRAPPING-RAINWATER.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/04. Trapping Rainwater.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_STACK-USING-TWO-QUEUE", "title": "Stack Using Two Queue", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/STACK-USING-TWO-QUEUE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/1. Learning/03. Implement stack using queue.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_ASTEROID-COLLISION", "title": "Asteroid Collision", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/ASTEROID-COLLISION.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/10. Asteroids Collision.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_SUM-OF-SUBARRAY-MINIMUMS", "title": "Sum Of Subarray Minimums", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/SUM-OF-SUBARRAY-MINIMUMS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/05. Sum of subarray minimum.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_CRAWLER-LOG-FOLDER", "title": "Crawler Log Folder", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/CRAWLER-LOG-FOLDER.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_STACK-USING-ONE-QUEUE", "title": "Stack Using One Queue", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/STACK-USING-ONE-QUEUE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/1.Get Strong Hold/04.Sort_stack_using_recursion.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_QUEUE-USING-STACK", "title": "Queue Using Stack", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/QUEUE-USING-STACK.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/1. Learning/04. Implement queue using stacks.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_NEXT-SMALLER", "title": "Next Smaller", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/NEXT-SMALLER.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/2.Medium/08.Next_permutation.cpp", "status": "approx", "approach_summary": "To find the next permutation of an array, we can follow these steps:\n\n1. Find the first index `i` from the right such that `nums[i] < nums[i+1]`. This is the first element that needs to be swapped.\n2. Find the first index `j` from the right such that `nums[j] > nums[i]`. This is the element that will replace `nums[i]`.\n3. Swap `nums[i]` and `nums[j]`.\n4. Reverse the subarray starting from `i+1` till the end of the array.\n5. If step 1 does not find any index `i`, it means the array is in descending order. In that case, reverse the entire array to get the lowest possible order.", "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_VALID-PARANTHESES", "title": "Valid Parantheses", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/VALID-PARANTHESES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/1.Easy/07.Valid_anagram.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_MAXIMAL-RECTANGLE", "title": "Maximal Rectangle", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/MAXIMAL-RECTANGLE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/09. Maximal Rectangle in binary matrix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_STOCK-SPAN", "title": "Stock Span", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/STOCK-SPAN.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/4. Implementation/02. Stock span problem.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_REMOVE-K-DIGITS", "title": "Remove K Digits", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/REMOVE-K-DIGITS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/07. Remove K elements.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_NEXT-GREATER-ELEMENT-2", "title": "Next Greater Element 2", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/NEXT-GREATER-ELEMENT-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/02. Next Greater Element 2.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_NUMBER-OF-NGES-TO-THE-RIGHT", "title": "Number Of Nges To The Right", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/NUMBER-OF-NGES-TO-THE-RIGHT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/01. Count the number of provinces.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_STACK-USING-LINKEDLIST", "title": "Stack Using Linkedlist", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/STACK-USING-LINKEDLIST.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/1. Learning/01. Implement stack using array.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_SLIDING-WINDOW-MAX", "title": "Sliding Window Max", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/SLIDING-WINDOW-MAX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/4. Implementation/01. Sliding window maximum.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_SUM-OF-SUBARRAY-RANGES", "title": "Sum Of Subarray Ranges", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/SUM-OF-SUBARRAY-RANGES.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_LARGEST-RECTANGLE-IN-HISTOGRAM", "title": "Largest Rectangle In Histogram", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/LARGEST-RECTANGLE-IN-HISTOGRAM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/08. Largest Rectangle in Histogram.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_PREFIX-INFIX", "title": "Prefix Infix", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/INFIX-PREFIX-POSTFIX/PREFIX-INFIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/2. Infix, Postfix, and Prefix/03. Prefix to infix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_PREFIX-POSTFIX", "title": "Prefix Postfix", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/INFIX-PREFIX-POSTFIX/PREFIX-POSTFIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/2. Infix, Postfix, and Prefix/04. Prefix to postfix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_POSTFIX-PREFIX", "title": "Postfix Prefix", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/INFIX-PREFIX-POSTFIX/POSTFIX-PREFIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/2. Infix, Postfix, and Prefix/06. Postfix to prefix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_INFIX-PREFIX", "title": "Infix Prefix", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/INFIX-PREFIX-POSTFIX/INFIX-PREFIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/2. Infix, Postfix, and Prefix/02. Infix to prefix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_INFIX-POSTFIX", "title": "Infix Postfix", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/INFIX-PREFIX-POSTFIX/INFIX-POSTFIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/2. Infix, Postfix, and Prefix/05. Postfix to infix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_09_-_stacks_queues_POSTFIX-INFIX", "title": "Postfix Infix", "a2z_path": "Step 09 - Stacks Queues", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 09 - Stacks Queues/INFIX-PREFIX-POSTFIX/POSTFIX-INFIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/2. Infix, Postfix, and Prefix/01. Infix to postfix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_CHEAPEST-FLIGHT-K-STOPS", "title": "Cheapest Flight K Stops", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/CHEAPEST-FLIGHT-K-STOPS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/06. Cheapest Flights with K stops.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_ENCLAVES", "title": "Enclaves", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/ENCLAVES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/07. Number of Enclaves.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_MAKE-A-LARGE-ISLAND", "title": "Make A Large Island", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/MAKE-A-LARGE-ISLAND.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/5. MST Problems/07. Making Large Island.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_BIPARTITE-GRAPH", "title": "Bipartite Graph", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/BIPARTITE-GRAPH.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/11. Bipartite Graph.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_MINIMUM-EFFORT-PATH", "title": "Minimum Effort Path", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/MINIMUM-EFFORT-PATH.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/05. Path with minimum effort.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_MOST-STONES-REMOVED-WITHIN-SAME-ROW", "title": "Most Stones Removed Within Same Row", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/MOST-STONES-REMOVED-WITHIN-SAME-ROW.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/5. MST Problems/04. Most stones removed.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_ALIENS-DICTIONARY", "title": "Aliens Dictionary", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/ALIENS-DICTIONARY.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_EVENTUAL-SAFE-STATES", "title": "Eventual Safe States", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/EVENTUAL-SAFE-STATES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/3. Topo Sort Problems/05. Find Eventual Safe State.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_NUM-WAYS-TO-ARRIVE-AT-DESTINATION", "title": "Num Ways To Arrive At Destination", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/NUM-WAYS-TO-ARRIVE-AT-DESTINATION.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/11. Number of ways to arrive the destination with minimum distance.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_NUMBER-PROVINCES", "title": "Number Provinces", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/NUMBER-PROVINCES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/10.Missing_number.cpp", "status": "approx", "approach_summary": "-> Calculate the optimum sum i.e. sum when all elements were present\n-> Calculate the actual array's sum\n-> Return the optimum sum - actual sum", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "step_15_-_graphs_MST-KRUSKAL-ALGO", "title": "Mst Kruskal Algo", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/MST-KRUSKAL-ALGO.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_DFS", "title": "Dfs", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/DFS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_DJIKSTRA-ALGORITHM", "title": "Djikstra Algorithm", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/DJIKSTRA-ALGORITHM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/2.Medium/04.Kadane's_algorithm.cpp", "status": "approx", "approach_summary": "-> Initialize two variables: maxSum and currentSum. Set both variables to the first element of the array.\n-> Iterate through the array starting from the second element:\n    Update currentSum by adding the current element to it.\n    If currentSum becomes negative, reset it to 0. This step ensures that we consider only the subarrays with positive sums.\n    Update maxSum by taking the maximum value between maxSum and currentSum. This keeps track of the maximum subarray sum encountered so far.\n-> After the iteration, the maxSum variable will hold the largest sum of any subarray.\n-> Return the maxSum as the result.", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "step_15_-_graphs_MST-PRIMS-ALGORITHM", "title": "Mst Prims Algorithm", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/MST-PRIMS-ALGORITHM.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_UNDIRECTED-GRAPH-CYCLE-DFS", "title": "Undirected Graph Cycle Dfs", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/UNDIRECTED-GRAPH-CYCLE-DFS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/04. Detect Cycle in Undirected Graph.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_BFS", "title": "Bfs", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/BFS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_DISJOINT-SET-IMPLEMENTATION", "title": "Disjoint Set Implementation", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/DISJOINT-SET-IMPLEMENTATION.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_SMALLEST-DISTANCE-THRESHOLD", "title": "Smallest Distance Threshold", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/SMALLEST-DISTANCE-THRESHOLD.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_DIRECTED-GRAPH-CYCLE-DFS", "title": "Directed Graph Cycle Dfs", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/DIRECTED-GRAPH-CYCLE-DFS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/12. Detect Cycle in Directed Graph.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_MIN-MULTIPLICATIONS-TO-REACH-END", "title": "Min Multiplications To Reach End", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/MIN-MULTIPLICATIONS-TO-REACH-END.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_01-MATRIX", "title": "01 Matrix", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/01-MATRIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/2.Medium/12.Rotate_matrix.cpp", "status": "approx", "approach_summary": "To rotate the image by 90 degrees clockwise in-place, we can follow these steps:\n\n1. Transpose the matrix: Iterate over the matrix and swap each element (i, j) with its corresponding element (j, i). This step transforms rows into columns.\n\n2. Reverse each row: Iterate over each row in the transposed matrix and reverse the elements. This step ensures the rotation in a clockwise direction.", "time_complexity": "O(N^2), where N is the size of the matrix.", "space_complexity": "O(1)", "tags": []}
{"problem_id": "step_15_-_graphs_FLOYD-WARSHALL", "title": "Floyd Warshall", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/FLOYD-WARSHALL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/09. Floyd Warshall Algorithm.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_BINARY-MAZE-SHORTEST-PATH", "title": "Binary Maze Shortest Path", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/BINARY-MAZE-SHORTEST-PATH.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/04. Shortest Path in binary matrix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_TOPOLOGICAL-SORT-DFS", "title": "Topological Sort Dfs", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/TOPOLOGICAL-SORT-DFS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_WORD-LADDER-2", "title": "Word Ladder 2", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/WORD-LADDER-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/08. Word Ladder.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_SHORTEST-PATH-UG", "title": "Shortest Path Ug", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/SHORTEST-PATH-UG.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_WORD-LADDER-1", "title": "Word Ladder 1", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/WORD-LADDER-1.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_TOPOLOGICAL-SORT-BFS-KAHNS-ALGO", "title": "Topological Sort Bfs Kahns Algo", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/TOPOLOGICAL-SORT-BFS-KAHNS-ALGO.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_OPERATIONS-TO-MAKE-NETWORK-CONNECTED", "title": "Operations To Make Network Connected", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/OPERATIONS-TO-MAKE-NETWORK-CONNECTED.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/5. MST Problems/03. Number of Operations to make Network.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_ROTTEN-ORANGES", "title": "Rotten Oranges", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/ROTTEN-ORANGES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/02. Rotten Oranges.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_ACCOUNT-MERGE", "title": "Account Merge", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/ACCOUNT-MERGE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/5. MST Problems/05. Account Merge.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_BELLMAN-FORD", "title": "Bellman Ford", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/BELLMAN-FORD.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/08. Bellman Ford Algorithm.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_UNDIRECTED-GRAPH-CYCLE-BFS", "title": "Undirected Graph Cycle Bfs", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/UNDIRECTED-GRAPH-CYCLE-BFS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_DIRECTED-GRAPH-CYCLE-BFS", "title": "Directed Graph Cycle Bfs", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/DIRECTED-GRAPH-CYCLE-BFS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_COURSE-SCHEDULE-2", "title": "Course Schedule 2", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/COURSE-SCHEDULE-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/3. Topo Sort Problems/04. Course Scheduler 2.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_NETWORK-DELAY", "title": "Network Delay", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/NETWORK-DELAY.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/07. Network Delay Time.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_COURSE-SCHEDULE-1", "title": "Course Schedule 1", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/COURSE-SCHEDULE-1.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/3. Topo Sort Problems/03. Course Scheduler 1.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_SURROUNDED-REGIONS", "title": "Surrounded Regions", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/SURROUNDED-REGIONS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/06. Surrounded Regions.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_15_-_graphs_FLOOD-FILL", "title": "Flood Fill", "a2z_path": "Step 15 - Graphs", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 15 - Graphs/FLOOD-FILL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/03. Flood-Fill Algorithm.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_02_-_sorting_techniques_BUBBLE-SORT", "title": "Bubble Sort", "a2z_path": "Step 02 - Sorting Techniques", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 02 - Sorting Techniques/BUBBLE-SORT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/10.Sort_LL.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_02_-_sorting_techniques_MERGE-SORT", "title": "Merge Sort", "a2z_path": "Step 02 - Sorting Techniques", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 02 - Sorting Techniques/MERGE-SORT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_02_-_sorting_techniques_SELECTION-SORT", "title": "Selection Sort", "a2z_path": "Step 02 - Sorting Techniques", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 02 - Sorting Techniques/SELECTION-SORT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_02_-_sorting_techniques_QUICK-SORT", "title": "Quick Sort", "a2z_path": "Step 02 - Sorting Techniques", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 02 - Sorting Techniques/QUICK-SORT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_02_-_sorting_techniques_INSERTION-SORT", "title": "Insertion Sort", "a2z_path": "Step 02 - Sorting Techniques", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 02 - Sorting Techniques/INSERTION-SORT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-05-PARTN-WITH-GIVEN-DIFF", "title": "Subseq 05 Partn With Given Diff", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-05-PARTN-WITH-GIVEN-DIFF.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-03-PARTITION-ARR-TO-MIN-SUM-DIFF", "title": "Subseq 03 Partition Arr To Min Sum Diff", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-03-PARTITION-ARR-TO-MIN-SUM-DIFF.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_MINIMAL-COST", "title": "Minimal Cost", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/MINIMAL-COST.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_CHOCO-PICKUP", "title": "Choco Pickup", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/CHOCO-PICKUP.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_STOCKS-6", "title": "Stocks 6", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/STOCKS-6.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SHORTEST-COMMON-SUPERSEQ", "title": "Shortest Common Superseq", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SHORTEST-COMMON-SUPERSEQ.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/5. DP on Strings/07. Shortest Common Supersequence.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-09-KNAPSACK", "title": "Subseq 09 Knapsack", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-09-KNAPSACK.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_STOCKS-4", "title": "Stocks 4", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/STOCKS-4.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_STOCKS-5", "title": "Stocks 5", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/STOCKS-5.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_STOCKS-2", "title": "Stocks 2", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/STOCKS-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/06.Subset 2.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-08-COIN-CHANGE2", "title": "Subseq 08 Coin Change2", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-08-COIN-CHANGE2.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-04-COUNT-SUBSET-EQ-TO-GIVEN-SUM", "title": "Subseq 04 Count Subset Eq To Given Sum", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-04-COUNT-SUBSET-EQ-TO-GIVEN-SUM.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_CLIMBING-STAIRS", "title": "Climbing Stairs", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/CLIMBING-STAIRS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/2. 1D DP/01. Climbing Stairs.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-07-TARGET-SUM", "title": "Subseq 07 Target Sum", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-07-TARGET-SUM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/08. Target Sum.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LONGEST-PALINDROMIC-SUBSEQ", "title": "Longest Palindromic Subseq", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LONGEST-PALINDROMIC-SUBSEQ.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/2.Medium/06.Longest_palindromic_substring.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-06-COIN-CHANGE", "title": "Subseq 06 Coin Change", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-06-COIN-CHANGE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/07. Coin Change.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-01-SUBSET-SUM-PROBLEM", "title": "Subseq 01 Subset Sum Problem", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-01-SUBSET-SUM-PROBLEM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/2.Medium/01.2_sum_problem.cpp", "status": "approx", "approach_summary": null, "time_complexity": "O(N)", "space_complexity": "O(N)", "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LIS-02-PRINT-LIS", "title": "Lis 02 Print Lis", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LIS-02-PRINT-LIS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/7. DP on LIS/02. Print LIS.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_MCM-01-MCM", "title": "Mcm 01 Mcm", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/MCM-01-MCM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/8. DP on Partition/01. MCM.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-10-ROD-CUTTING", "title": "Subseq 10 Rod Cutting", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-10-ROD-CUTTING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/11. Rod Cutting Problem.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_DELETE-OPERATIONG-MAKE-STRING-SAME", "title": "Delete Operationg Make String Same", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/DELETE-OPERATIONG-MAKE-STRING-SAME.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LONGEST-COMMON-SUBSEQ", "title": "Longest Common Subseq", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LONGEST-COMMON-SUBSEQ.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/1.Easy/04.Longest_common_prefix.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LIS-04-NUMBER-LIS", "title": "Lis 04 Number Lis", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LIS-04-NUMBER-LIS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/7. DP on LIS/05. Number of LIS.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_DISTINCT-SUBSEQ", "title": "Distinct Subseq", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/DISTINCT-SUBSEQ.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/2. Traversal Problems/10. Distinct Islands.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_BURST-BALLOON-02", "title": "Burst Balloon 02", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/BURST-BALLOON-02.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_SUBSEQ-02-PARTITION-EQUAL-SUBSET-SUM", "title": "Subseq 02 Partition Equal Subset Sum", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/SUBSEQ-02-PARTITION-EQUAL-SUBSET-SUM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/01. Subset sum equal to k.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_MIN-PATH-SUM-TRIANGLE", "title": "Min Path Sum Triangle", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/MIN-PATH-SUM-TRIANGLE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/3. 2D DP/04. Minimum Path Sum.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LIS-03-LARGEST-DIV-SUBSET", "title": "Lis 03 Largest Div Subset", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LIS-03-LARGEST-DIV-SUBSET.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/7. DP on LIS/03. Largest Divisible Subset.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_MIN-INSERTIONS-TO-MAKE-STRING-PALINDROME", "title": "Min Insertions To Make String Palindrome", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/MIN-INSERTIONS-TO-MAKE-STRING-PALINDROME.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/5. DP on Strings/05. Minimum steps to make string palindrome.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_FROG-JUMP", "title": "Frog Jump", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/FROG-JUMP.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/2. 1D DP/02. Frog Jump.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_MCM-02-MIN-COST-TO-CUT-STICK", "title": "Mcm 02 Min Cost To Cut Stick", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/MCM-02-MIN-COST-TO-CUT-STICK.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/8. DP on Partition/02. Minimum cost to cut stick.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_STOCKS-1", "title": "Stocks 1", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/STOCKS-1.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/05.Subset 1.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_MIN-FALLING-PATH-SUM", "title": "Min Falling Path Sum", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/MIN-FALLING-PATH-SUM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/3. 2D DP/06. Minimum Falling Path Sum.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_DP-SQUARE-COUNT-SUBMATRICS", "title": "Dp Square Count Submatrics", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/DP-SQUARE-COUNT-SUBMATRICS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/9. DP on Squares/02. Count square submatrices.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_EDIT-DISTANCE", "title": "Edit Distance", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/EDIT-DISTANCE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LIS-05-BITONIC", "title": "Lis 05 Bitonic", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LIS-05-BITONIC.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_STOCKS-3", "title": "Stocks 3", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/STOCKS-3.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_PRINT-LONGEST-COMMON-SUBSEQ", "title": "Print Longest Common Subseq", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/PRINT-LONGEST-COMMON-SUBSEQ.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/5. DP on Strings/01. Longest Common Subsequence.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LIS-06-LONGEST-STRING-CHAIN", "title": "Lis 06 Longest String Chain", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LIS-06-LONGEST-STRING-CHAIN.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_0-1-KNAPSACK", "title": "0 1 Knapsack", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/0-1-KNAPSACK.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/1. Easy/02. Fractional Knapsack.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_UNIQUE-PATHS-2", "title": "Unique Paths 2", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/UNIQUE-PATHS-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/3. 2D DP/03. Unique Paths 2.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_WILDCARD-MATCHING", "title": "Wildcard Matching", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/WILDCARD-MATCHING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/5. DP on Strings/09. Wildcard Matching.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LIS-01-IMPLEMENT", "title": "Lis 01 Implement", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LIS-01-IMPLEMENT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_NINJAS-TRAINING", "title": "Ninjas Training", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/NINJAS-TRAINING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/3. 2D DP/01. Ninja Training.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_HOUSE-ROBBER-2", "title": "House Robber 2", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/HOUSE-ROBBER-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/2. 1D DP/05. House Robber 2.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_UNIQUE-PATHS-1", "title": "Unique Paths 1", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/UNIQUE-PATHS-1.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/3. 2D DP/02. Unique Paths.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_HOUSE-ROBBER-1", "title": "House Robber 1", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/HOUSE-ROBBER-1.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/2. 1D DP/04. House Robber.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_16_-_dynamic_programming_LONGEST-COMMON-SUBSTRING", "title": "Longest Common Substring", "a2z_path": "Step 16 - Dynamic Programming", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 16 - Dynamic Programming/LONGEST-COMMON-SUBSTRING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/5. DP on Strings/03. Longest Common Substring.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_INTERSECTION-OF-LL", "title": "Intersection Of Ll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/INTERSECTION-OF-LL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/09.Delete_mid_of_LL.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_LENGTH-OF-CYCLE", "title": "Length Of Cycle", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/LENGTH-OF-CYCLE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_FLATTEN-DLL", "title": "Flatten Dll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/FLATTEN-DLL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/5.Hard Promblems of LL/04.Flatten_LL.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_SPLIT-LINKED-LIST-IN-PARTS", "title": "Split Linked List In Parts", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/SPLIT-LINKED-LIST-IN-PARTS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/1. Single Linked List/03.Deleting_node_in_linked_list.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_PAIRS-IN-DLL", "title": "Pairs In Dll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/PAIRS-IN-DLL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/4.Medium Problems of DLL/02.Pair_sum_in_dll.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_FLATTEN-LL", "title": "Flatten Ll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/FLATTEN-LL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/02.Reverse_LL.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_PALINDROME", "title": "Palindrome", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/PALINDROME.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/16. Strings (Hard)/Hard/05. Shortest Palindrome.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_ROTATE-LIST", "title": "Rotate List", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/ROTATE-LIST.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_REMOVE-DUPLICATES-DLL", "title": "Remove Duplicates Dll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/REMOVE-DUPLICATES-DLL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/4.Medium Problems of DLL/03.Remove_duplicates_from_dll.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_SORT-LIST", "title": "Sort List", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/SORT-LIST.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_REMOVE-NTH-NODE", "title": "Remove Nth Node", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/REMOVE-NTH-NODE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/08.Delete_nth_node_from_back.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_DETECT-CYCLE", "title": "Detect Cycle", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/DETECT-CYCLE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_ODD-EVEN-GROUPING", "title": "Odd Even Grouping", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/ODD-EVEN-GROUPING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/07.Odd_even_LL.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_REVERSE-LL", "title": "Reverse Ll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/REVERSE-LL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/11.Reverse_pairs.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_DETECT-CYCLE-II", "title": "Detect Cycle Ii", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/DETECT-CYCLE-II.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_INSERT-NODE-DLL", "title": "Insert Node Dll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/INSERT-NODE-DLL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/2.Doubly Linked List/02.Insert_node_in_DLL.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_INSERT-GCD-IN-LINKED-LIST", "title": "Insert Gcd In Linked List", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/INSERT-GCD-IN-LINKED-LIST.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/1. Single Linked List/05.Search_element_in_linked_list.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_REMOVE-NODES-DLL", "title": "Remove Nodes Dll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/REMOVE-NODES-DLL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/4.Medium Problems of DLL/01.Delete_nodes_from_dll.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_ADD-TWO-NUMBERS", "title": "Add Two Numbers", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/ADD-TWO-NUMBERS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/13.Add_two_LL.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_TORTOISE-HAIR-METHOD", "title": "Tortoise Hair Method", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/TORTOISE-HAIR-METHOD.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_CLONE-LIST", "title": "Clone List", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/CLONE-LIST.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_SORT-0S-1S-2S", "title": "Sort 0S 1S 2S", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/SORT-0S-1S-2S.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_REVERSE-DLL", "title": "Reverse Dll", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/REVERSE-DLL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/2.Doubly Linked List/04.Reverse_DLL.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_REVERSE-NODES-IN-GROUP-OF-K", "title": "Reverse Nodes In Group Of K", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/REVERSE-NODES-IN-GROUP-OF-K.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/5.Hard Promblems of LL/01.Reverse_k_node_in_groups.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_LFU-CACHE", "title": "Lfu Cache", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/DESIGN BASED/LFU-CACHE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/4. Implementation/04. LRU Cache.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_06_-_linked_list_LRU-CACHE", "title": "Lru Cache", "a2z_path": "Step 06 - Linked List", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 06 - Linked List/DESIGN BASED/LRU-CACHE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_PAINTERS-PARTITION", "title": "Painters Partition", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/PAINTERS-PARTITION.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_2D-MATRIX-BINARY-SEARCH", "title": "2D Matrix Binary Search", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/2D-MATRIX-BINARY-SEARCH.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/2D Arrays/2.Search_in_sorted_matrix.cpp", "status": "approx", "approach_summary": "-> Since the array is sorted we can use binary search low = 0 and high = n*m-1 i.e. total number of elements\n-> Value at mid position could be accessed by matrix[mid/m][mid%m]\n-> Then, follow the traditional binary search", "time_complexity": "O(log(M * N))", "space_complexity": "O(0)", "tags": []}
{"problem_id": "step_04_-_binary_search_2D-MATRIX-BS-HARD", "title": "2D Matrix Bs Hard", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/2D-MATRIX-BS-HARD.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_FIRST-LAST-INDEX", "title": "First Last Index", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/FIRST-LAST-INDEX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/06.First_and_last_position.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_MIN-IN-ROTATED-ARRAY", "title": "Min In Rotated Array", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/MIN-IN-ROTATED-ARRAY.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/09.Search_in_rotated_sorted_array.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_SHIP-PACKAGES", "title": "Ship Packages", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/SHIP-PACKAGES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/06.Capacity_to_ship_packages.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_SPLIT-LARGEST", "title": "Split Largest", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/SPLIT-LARGEST.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/10.Split_array_largest.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_NTH-ROOT", "title": "Nth Root", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/NTH-ROOT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/02.Nth_root_of_integer.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_AGGRESSIVE-COWS", "title": "Aggressive Cows", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/AGGRESSIVE-COWS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/08.Aggresive_cows.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_MAX-1S-ROW", "title": "Max 1S Row", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/MAX-1S-ROW.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_SQRT", "title": "Sqrt", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/SQRT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_KTH-MISSING-POS", "title": "Kth Missing Pos", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/KTH-MISSING-POS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/11.Kth_missing_number.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_MEDIAN-OF-TWO-SORTED-ARR", "title": "Median Of Two Sorted Arr", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/MEDIAN-OF-TWO-SORTED-ARR.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/13.Median_of_two_sorted_arrays.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_SEARCH-ROT-SORTED-1", "title": "Search Rot Sorted 1", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/SEARCH-ROT-SORTED-1.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_GAS-STATIONS", "title": "Gas Stations", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/GAS-STATIONS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/12.Gas_station.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_KOKO-EATING-BANANAS", "title": "Koko Eating Bananas", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/KOKO-EATING-BANANAS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/03.Koko_eating_banana.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_ROTATION", "title": "Rotation", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/ROTATION.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_BOOK-ALLOCATION-PROBLEM", "title": "Book Allocation Problem", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/BOOK-ALLOCATION-PROBLEM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/09.Book_allocation.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_CEIL-FLOOR", "title": "Ceil Floor", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/CEIL-FLOOR.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_PEAK-ELEMENT", "title": "Peak Element", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/PEAK-ELEMENT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/08.Find_peak_element.cpp", "status": "approx", "approach_summary": "We can use the binary search approach to find the peak element.\n1. Initialize low = 0 and high = n-1, where n is the size of the array.\n2. While low < high, calculate mid = low + (high - low) / 2.\n3. If nums[mid] < nums[mid+1], it means a peak element exists on the right side of mid, so update low = mid+1.\n4. Otherwise, a peak element exists on the left side of mid or mid itself is a peak, so update high = mid.\n5. After the loop ends, low will be pointing to the peak element index.\n6. Return low as the result.\n\nCODE:-", "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_PEAK-ELEMENT-02", "title": "Peak Element 02", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/PEAK-ELEMENT-02.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_SINGLE-ELEMENT", "title": "Single Element", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/SINGLE-ELEMENT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/12.Find_single_element_in_sorted_array.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_SEARCH-INSERT-POSITION", "title": "Search Insert Position", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/SEARCH-INSERT-POSITION.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/04.Search_insert_position.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_SMALLEST-DIVISOR", "title": "Smallest Divisor", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/SMALLEST-DIVISOR.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_MIN-DAYS-M-BOUQETS", "title": "Min Days M Bouqets", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/MIN-DAYS-M-BOUQETS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_MEDIAN-IN-MATRIX", "title": "Median In Matrix", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/MEDIAN-IN-MATRIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/2D Arrays/5.Matrix_median.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_04_-_binary_search_SEARCH-ROT-SORTED-2", "title": "Search Rot Sorted 2", "a2z_path": "Step 04 - Binary Search", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 04 - Binary Search/SEARCH-ROT-SORTED-2.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_17_-_tries_WORD-SEARCH-2", "title": "Word Search 2", "a2z_path": "Step 17 - Tries", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 17 - Tries/WORD-SEARCH-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/3.Try Out All Combos/02.Word search in grid.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_17_-_tries_DP-ON-TRIES-MIN-VALID-SUBSTRING", "title": "Dp On Tries Min Valid Substring", "a2z_path": "Step 17 - Tries", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 17 - Tries/DP-ON-TRIES-MIN-VALID-SUBSTRING.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_17_-_tries_IMPLEMENT-TRIE", "title": "Implement Trie", "a2z_path": "Step 17 - Tries", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 17 - Tries/IMPLEMENT-TRIE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/15. Tries/2. Problems/01. Implement Trie 2.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_17_-_tries_DESIGN-ADD-SEARCH-DATA-STRUCTURE", "title": "Design Add Search Data Structure", "a2z_path": "Step 17 - Tries", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 17 - Tries/DESIGN-ADD-SEARCH-DATA-STRUCTURE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_RABIN-KARP-REPEATED-STRING-MATCH", "title": "Rabin Karp Repeated String Match", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/RABIN-KARP-REPEATED-STRING-MATCH.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_LONGEST-HAPPY-PREFIX", "title": "Longest Happy Prefix", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/LONGEST-HAPPY-PREFIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/16. Strings (Hard)/Hard/04. Longest Happy Prefix.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_LONGEST-COMMON-PREFIX", "title": "Longest Common Prefix", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/LONGEST-COMMON-PREFIX.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_SORT-CHARS-BY-FREQ", "title": "Sort Chars By Freq", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/SORT-CHARS-BY-FREQ.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/2.Medium/01.Sort_characters_by_frequency.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_ROMAN-TO-INT", "title": "Roman To Int", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/ROMAN-TO-INT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/2.Medium/03.Roman_to_Integer.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_IMPLEMENT-ATOI", "title": "Implement Atoi", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/IMPLEMENT-ATOI.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/2.Medium/04.Implement_atoi.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_FIND-INDEX-OF-FIRST-OCCURENCE", "title": "Find Index Of First Occurence", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/FIND-INDEX-OF-FIRST-OCCURENCE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_COUNT-PALINDROMIC-SUBSEQ", "title": "Count Palindromic Subseq", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/COUNT-PALINDROMIC-SUBSEQ.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_VALID-ANAGRAMS", "title": "Valid Anagrams", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/VALID-ANAGRAMS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/1. Learning/06. Valid Parenthesis.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_CHECK-ROTATION", "title": "Check Rotation", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/CHECK-ROTATION.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_LONGEST-PALINDROMIC-SUBSTR", "title": "Longest Palindromic Substr", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/LONGEST-PALINDROMIC-SUBSTR.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/5. DP on Strings/04. Longest Palindromic Subsequence.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_REMOVE-OUTER-PARANTH", "title": "Remove Outer Paranth", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/REMOVE-OUTER-PARANTH.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/1.Easy/01.Remove_outer_parenthesis.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_KMP-PATTERN-MATCHING", "title": "Kmp Pattern Matching", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/KMP-PATTERN-MATCHING.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_MAX-SCORE-FROM-REMOVING-SUBSTR", "title": "Max Score From Removing Substr", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/MAX-SCORE-FROM-REMOVING-SUBSTR.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_SUM-OF-BEAUTY-OF-ALL-SUBSTR", "title": "Sum Of Beauty Of All Substr", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/SUM-OF-BEAUTY-OF-ALL-SUBSTR.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/2.Medium/07.Sum_of_beauty_of_all_substrings.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_LARGEST-ODD-NUM-IN-STRING", "title": "Largest Odd Num In String", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/LARGEST-ODD-NUM-IN-STRING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/1.Easy/03.Largest_odd_number_in_string.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_MIN-ADD-TO-MAKE-PARANTHESES", "title": "Min Add To Make Parantheses", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/MIN-ADD-TO-MAKE-PARANTHESES.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_REV-WORDS", "title": "Rev Words", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/REV-WORDS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_SHORTEST-PALINDROME", "title": "Shortest Palindrome", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/SHORTEST-PALINDROME.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/3.Try Out All Combos/01.Palindrome partioning.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_COUNT-SAY", "title": "Count Say", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/COUNT-SAY.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/16. Strings (Hard)/Hard/02. Count and Say.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_05_+_18_-_strings_COUNT-SUBSTRS", "title": "Count Substrs", "a2z_path": "Step 05 + 18 - Strings", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 05 + 18 - Strings/COUNT-SUBSTRS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/10.Count_inversions.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_RAT-IN-A-MAZE", "title": "Rat In A Maze", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/RAT-IN-A-MAZE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/3.Try Out All Combos/03.Rat in maze.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_COMBINATION-SUM-2", "title": "Combination Sum 2", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/COMBINATION-SUM-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/08.Combination Sum 2.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_SUBSETS", "title": "Subsets", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/SUBSETS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_COMBINATION-SUM-3", "title": "Combination Sum 3", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/COMBINATION-SUM-3.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/09.Combination Sum 3.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_GENERATE-ALL-BIN-STRINGS", "title": "Generate All Bin Strings", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/GENERATE-ALL-BIN-STRINGS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_WORD-BREAK", "title": "Word Break", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/WORD-BREAK.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/3.Try Out All Combos/06.Word Break.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_BETTER-STRING", "title": "Better String", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/BETTER-STRING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/15. Tries/2. Problems/02. Complete String.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_N-QUEEN", "title": "N Queen", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/N-QUEEN.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/3.Try Out All Combos/05.N queens.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_SUBSET-SUM-1", "title": "Subset Sum 1", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/SUBSET-SUM-1.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/07.Combination Sum 1.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_SUBSET-SUM-2", "title": "Subset Sum 2", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/SUBSET-SUM-2.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/04.4_sum.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_REVERSE-STACK", "title": "Reverse Stack", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/REVERSE-STACK.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_WORD-SEARCH", "title": "Word Search", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/WORD-SEARCH.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/08.Linear_search.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_PHONE-NUMBER", "title": "Phone Number", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/PHONE-NUMBER.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_M-COLORING-PROBLEM", "title": "M Coloring Problem", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/M-COLORING-PROBLEM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/3.Try Out All Combos/04.M coloring problem.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_COMBINATION-SUM-1", "title": "Combination Sum 1", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/COMBINATION-SUM-1.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_PALINDROME-PARTITIONING", "title": "Palindrome Partitioning", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/PALINDROME-PARTITIONING.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_SUDOKU-SOLVER", "title": "Sudoku Solver", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/SUDOKU-SOLVER.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/3.Try Out All Combos/07.Sudoku solver.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_07_-_recursion_GENERATE-PARANTHESES", "title": "Generate Parantheses", "a2z_path": "Step 07 - Recursion", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 07 - Recursion/GENERATE-PARANTHESES.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_SUBSTRING-CONTAINING-ALL-THREE-CHARS", "title": "Substring Containing All Three Chars", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/SUBSTRING-CONTAINING-ALL-THREE-CHARS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_LONGEST-SUBSTR-REP-CHARS", "title": "Longest Substr Rep Chars", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/LONGEST-SUBSTR-REP-CHARS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_COUNT-K-UNIQ-ELEM-SUBARRAY", "title": "Count K Uniq Elem Subarray", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/COUNT-K-UNIQ-ELEM-SUBARRAY.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_MIN-WINDOW-SUBSTRING", "title": "Min Window Substring", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/MIN-WINDOW-SUBSTRING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/2. Hard Problems/03. Minimum Window Substring.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_FRUITS-BASKETS", "title": "Fruits Baskets", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/FRUITS-BASKETS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_MAX-CONSEC-ONES", "title": "Max Consec Ones", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/MAX-CONSEC-ONES.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_LONGEST-K-UNIQ-CHARS-SUBSTRING", "title": "Longest K Uniq Chars Substring", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/LONGEST-K-UNIQ-CHARS-SUBSTRING.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_LONGEST-REP-CHARS-REPLACE", "title": "Longest Rep Chars Replace", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/LONGEST-REP-CHARS-REPLACE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_BINARY-SUBARR-WITH-GOAL", "title": "Binary Subarr With Goal", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/BINARY-SUBARR-WITH-GOAL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/1. Medium Problems/05. Binary Subarrays with Sum.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_NICE-SUBARRAY", "title": "Nice Subarray", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/NICE-SUBARRAY.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_10_-_sliding_window_MAX-POINTS-OBTAINED-FROM-CARDS", "title": "Max Points Obtained From Cards", "a2z_path": "Step 10 - Sliding Window", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 10 - Sliding Window/MAX-POINTS-OBTAINED-FROM-CARDS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_01_-_basics_CHECK-PALINDROME", "title": "Check Palindrome", "a2z_path": "Step 01 - Basics", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 01 - Basics/CHECK-PALINDROME.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/06.Check_for_palindrome_LL.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_01_-_basics_LCM-GCD", "title": "Lcm Gcd", "a2z_path": "Step 01 - Basics", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 01 - Basics/LCM-GCD.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_01_-_basics_ARMSTRONG-NUMBER", "title": "Armstrong Number", "a2z_path": "Step 01 - Basics", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 01 - Basics/ARMSTRONG-NUMBER.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_01_-_basics_COUNT-PRIMES", "title": "Count Primes", "a2z_path": "Step 01 - Basics", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 01 - Basics/COUNT-PRIMES.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_01_-_basics_ALL-DIVISORS", "title": "All Divisors", "a2z_path": "Step 01 - Basics", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 01 - Basics/ALL-DIVISORS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/3. Advanced Maths/02. All divisors of number.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_01_-_basics_REVERSE-NUMBER", "title": "Reverse Number", "a2z_path": "Step 01 - Basics", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 01 - Basics/REVERSE-NUMBER.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_DIVIDE-ARR-IN-SETS-OF-K-CONSEC-NUMBERS", "title": "Divide Arr In Sets Of K Consec Numbers", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/DIVIDE-ARR-IN-SETS-OF-K-CONSEC-NUMBERS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/2. Medium Problems/07. Divide array into sets of K consecutive number.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_REPLACE-WITH-RANK", "title": "Replace With Rank", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/REPLACE-WITH-RANK.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_MEDIAN-DATA-STREAM", "title": "Median Data Stream", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/MEDIAN-DATA-STREAM.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_MAX-COMBINATION-SUM", "title": "Max Combination Sum", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/MAX-COMBINATION-SUM.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_TASK-SCHEDULER", "title": "Task Scheduler", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/TASK-SCHEDULER.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/2. Medium Problems/06. Task Scheduler.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_MERGE-K-SORTED-ARR", "title": "Merge K Sorted Arr", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/MERGE-K-SORTED-ARR.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/2. Medium Problems/03. Merge K sorted arrays.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_HEAP-SORT", "title": "Heap Sort", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/HEAP-SORT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_KTH-LARGEST-IN-STREAM", "title": "Kth Largest In Stream", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/KTH-LARGEST-IN-STREAM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/3. Hard Problems/03. Kth largest element in stream.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_DESIGN-TWITTER", "title": "Design Twitter", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/DESIGN-TWITTER.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/3. Hard Problems/01. Design Twitter.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_INTRO-IMPLEMENT", "title": "Intro Implement", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/INTRO-IMPLEMENT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_MERGE-K-LINKEDLISTS", "title": "Merge K Linkedlists", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/MERGE-K-LINKEDLISTS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/2. Medium Problems/04. Merge K sorted Lists.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_MIN-COST-OF-ROPE", "title": "Min Cost Of Rope", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/MIN-COST-OF-ROPE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_K-MOST-FREQUENT", "title": "K Most Frequent", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/K-MOST-FREQUENT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/3. Hard Problems/06. Top K frequent elements.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_11_-_heaps_KTH-LARGEST", "title": "Kth Largest", "a2z_path": "Step 11 - Heaps", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 11 - Heaps/KTH-LARGEST.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/2. Medium Problems/01. Kth largest element.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_MAX-PRODUCT-SUBARR", "title": "Max Product Subarr", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/MAX-PRODUCT-SUBARR.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_LONGEST-SUBARR-WITH-SUM-K", "title": "Longest Subarr With Sum K", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/LONGEST-SUBARR-WITH-SUM-K.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/12.Longest_subarray_with_given_sum.cpp", "status": "approx", "approach_summary": "-> Use sliding window approach using two pointers start and end\n-> Run a loop to traverse the entire array add from end and subtract from start when sum>k\n-> If sum==k then, update the ans now, window size = end-start+1", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "step_03_-_arrays_SET-MATRIX-ZERO", "title": "Set Matrix Zero", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/SET-MATRIX-ZERO.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_ROTATE-IMAGE", "title": "Rotate Image", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/ROTATE-IMAGE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_SUBARR-SUM-EQ-K", "title": "Subarr Sum Eq K", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/SUBARR-SUM-EQ-K.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/3. Hard Problems/04. Maximum K sum combinations.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_MERGE-SORTED-ARR", "title": "Merge Sorted Arr", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/MERGE-SORTED-ARR.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_3-SUM", "title": "3 Sum", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/3-SUM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/03. Minimum Sum Partition.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_2-SUM", "title": "2 Sum", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/2-SUM.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_MISSING-REPEATING", "title": "Missing Repeating", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/MISSING-REPEATING.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/09.Repeating_and_missing_numbers.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_GRUMPY-BOOKSTORE-OWNER", "title": "Grumpy Bookstore Owner", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/GRUMPY-BOOKSTORE-OWNER.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_ROTATE-ARRAY-D-PLACES", "title": "Rotate Array D Places", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/ROTATE-ARRAY-D-PLACES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/06.Rotate_array_left&right_by_k_places.cpp", "status": "approx", "approach_summary": "To rotate the array k places to right follow below steps\n-> Reverse first n-k elements\n-> Reverse last k elements\n-> Reverse the entire array\n\nTo rotate the array k places to left follow below steps\n-> Reverse first k elements\n-> Reverse last n-k elements\n-> Reverse the entire array", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "step_03_-_arrays_CONTIGUOUS-ARRAY", "title": "Contiguous Array", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/CONTIGUOUS-ARRAY.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_REV-PAIRS", "title": "Rev Pairs", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/REV-PAIRS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_COUNT-INVERSIONS", "title": "Count Inversions", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/COUNT-INVERSIONS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_PRINT-MAX-SUM-SUBARR", "title": "Print Max Sum Subarr", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/PRINT-MAX-SUM-SUBARR.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_SPIRAL-MATRIX", "title": "Spiral Matrix", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/SPIRAL-MATRIX.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/2.Medium/13.Spiral_traversal.cpp", "status": "approx", "approach_summary": "To traverse the matrix in a spiral order, we can use the following steps:\n\n1. Initialize four variables: top, bottom, left, and right to keep track of the boundaries of the current spiral.\n2. Create an empty vector called 'ans' to store the elements in spiral order.\n3. While the top boundary is less than or equal to the bottom boundary and the left boundary is less than or equal to the right boundary:\n   - Traverse the top row from left to right and add each element to 'ans'.\n   - Increment the top boundary.\n   - Traverse the right column from top to bottom and add each element to 'ans'.\n   - Decrement the right boundary.\n   - Check if the top boundary is still less than or equal to the bottom boundary:\n     - Traverse the bottom row from right to left and add each element to 'ans'.\n     - Decrement the bottom boundary.\n   - Check if the left boundary is still less than or equal to the right boundary:\n     - Traverse the left column from bottom to top and add each element to 'ans'.\n     - Increment the left boundary.\n4. Return the 'ans' vector containing all the elements in spiral order.", "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_3-SUM-CLOSEST", "title": "3 Sum Closest", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/3-SUM-CLOSEST.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_KTH-ELEMENT", "title": "Kth Element", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/KTH-ELEMENT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/2. Medium Problems/02. Kth smallest element.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_ARRAY-LEADERS", "title": "Array Leaders", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/ARRAY-LEADERS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_MOVE-ZEROS-TO-END", "title": "Move Zeros To End", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/MOVE-ZEROS-TO-END.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/07.Move_0's_to_end.cpp", "status": "approx", "approach_summary": "-> The idea is while traversing the array if we found any zero then we have to swap it with next non-zero", "time_complexity": "O(N) (as we moving j throught the array only once)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "step_03_-_arrays_LONGEST-CONSECUTIVE-SUBSEQ", "title": "Longest Consecutive Subseq", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/LONGEST-CONSECUTIVE-SUBSEQ.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/2.Medium/10.Longest_consecutive_subsequence.cpp", "status": "approx", "approach_summary": "To find the length of the longest consecutive elements sequence, we can follow these steps:\n\n1. Create a set to store all the elements of the array.\n2. Iterate through the array and insert each element into the set.\n3. For each element, check if its previous consecutive element (num-1) exists in the set. If it does not exist, it means the current element is the starting element of a sequence.\n4. For each starting element, keep incrementing the current element (num+1) and checking if it exists in the set. This will help find the consecutive elements in the sequence.\n5. Keep track of the maximum length of consecutive elements encountered.\n6. Return the maximum length as the result.", "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_PASCAL-TRIANG", "title": "Pascal Triang", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/PASCAL-TRIANG.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/01.Pascal_triangle.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_MERGE-INTERVALS", "title": "Merge Intervals", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/MERGE-INTERVALS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_SPIRAL-MATRIX-IV", "title": "Spiral Matrix Iv", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/SPIRAL-MATRIX-IV.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_SORT-0S-1S-2S", "title": "Sort 0S 1S 2S", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/SORT-0S-1S-2S.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_MAX-SUM-SUBARRAY", "title": "Max Sum Subarray", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/MAX-SUM-SUBARRAY.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_REMOVE-DUPLICATES-SORTED-ARR", "title": "Remove Duplicates Sorted Arr", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/REMOVE-DUPLICATES-SORTED-ARR.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_MAJORITY-ELEMENT", "title": "Majority Element", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/MAJORITY-ELEMENT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/02.Majority_element_2.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_BEST-TIME-TO-BUY-SELL-STOCK", "title": "Best Time To Buy Sell Stock", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/BEST-TIME-TO-BUY-SELL-STOCK.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/6. DP on Stocks/02. Best time to buy and sell stock 2.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_NEXT-PERMUTATION", "title": "Next Permutation", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/NEXT-PERMUTATION.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_LARGEST-SUBARR-WITH-ZERO-SUM", "title": "Largest Subarr With Zero Sum", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/LARGEST-SUBARR-WITH-ZERO-SUM.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_4-SUM", "title": "4 Sum", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/4-SUM.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_MAJORITY-ELEMENT-2", "title": "Majority Element 2", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/MAJORITY-ELEMENT-2.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_SUBARR-WITH-XOR-X", "title": "Subarr With Xor X", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/SUBARR-WITH-XOR-X.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/06.Subarrays_with_xor_k.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_03_-_arrays_UNION-FIND", "title": "Union Find", "a2z_path": "Step 03 - Arrays", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 03 - Arrays/UNION-FIND.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_SET-UNSET-RIGHTMOST-UNSET", "title": "Set Unset Rightmost Unset", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/SET-UNSET-RIGHTMOST-UNSET.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/1. Learn Bit Manipulation/05.Set the righmost unset bit.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_SIEVE", "title": "Sieve", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/SIEVE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/3. Advanced Maths/03. Sieve of Eratosthenes.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_COUNT-SET-BITS", "title": "Count Set Bits", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/COUNT-SET-BITS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_XOR-L-TO-R", "title": "Xor L To R", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/XOR-L-TO-R.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/2. Interview Problems/03. XOR of numbers from L to R.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_PRIME-FACTORISATION", "title": "Prime Factorisation", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/PRIME-FACTORISATION.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_ALL-DIV-OF-A-NUM", "title": "All Div Of A Num", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/ALL-DIV-OF-A-NUM.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_COUNT-BITS-TO-FLIP-A-TO-B", "title": "Count Bits To Flip A To B", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/COUNT-BITS-TO-FLIP-A-TO-B.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_CHECK-ITH-BIT", "title": "Check Ith Bit", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/CHECK-ITH-BIT.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/1. Learn Bit Manipulation/02.Check for the ith bit.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_TWO-NUMBERS-WITH-ODD-OCCURENCE", "title": "Two Numbers With Odd Occurence", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/TWO-NUMBERS-WITH-ODD-OCCURENCE.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_DIVIDE-TWO-INT", "title": "Divide Two Int", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/DIVIDE-TWO-INT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_08_-_bit_manipulation_POWER-OF-TWO", "title": "Power Of Two", "a2z_path": "Step 08 - Bit Manipulation", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 08 - Bit Manipulation/POWER-OF-TWO.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_VALID-PARANTHESES-02", "title": "Valid Parantheses 02", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/VALID-PARANTHESES-02.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_SHORTEST-JOB-FIRST", "title": "Shortest Job First", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/SHORTEST-JOB-FIRST.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_ASSIGN-COOKIES", "title": "Assign Cookies", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/ASSIGN-COOKIES.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/1. Easy/01. Assign Cookies.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_JUMP-GAME-02", "title": "Jump Game 02", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/JUMP-GAME-02.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/2. Medium/02. Jump Game.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_COIN-CHANGE", "title": "Coin Change", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/COIN-CHANGE.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/09. Coin Change 2.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_FRACTIONAL-KNAPSACK", "title": "Fractional Knapsack", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/FRACTIONAL-KNAPSACK.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/06. 01 Knapsack.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_CANDY", "title": "Candy", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/CANDY.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/2. Medium/06. Candy.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_N-MEETINGS", "title": "N Meetings", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/N-MEETINGS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/2. Medium/01. N Meetings in one room.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_JUMP-GAME-01", "title": "Jump Game 01", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/JUMP-GAME-01.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_PAGE-FAULT", "title": "Page Fault", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/PAGE-FAULT.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_MIN-NUMBER-PLATFORMS", "title": "Min Number Platforms", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/MIN-NUMBER-PLATFORMS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_INSERT-INTERVAL", "title": "Insert Interval", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/INSERT-INTERVAL.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/2. Medium/07. Insert Interval.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_MERGE-INTERVALS", "title": "Merge Intervals", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/MERGE-INTERVALS.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_VALID-PARANTHESES-01", "title": "Valid Parantheses 01", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/VALID-PARANTHESES-01.py", "cpp_file_path": null, "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_NON-OVERLAPPING-INTERVALS", "title": "Non Overlapping Intervals", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/NON-OVERLAPPING-INTERVALS.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/2. Medium/08. Non Overlapping Intervals.cpp", "status": "exact-match", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "step_12_-_greedy_algorithm_JOB-SEQ-PROBLEM", "title": "Job Seq Problem", "a2z_path": "Step 12 - Greedy Algorithm", "links": [], "python_file_path": "/home/chiranjeet/dev/dsa/striver-a2z-dsa/Step 12 - Greedy Algorithm/JOB-SEQ-PROBLEM.py", "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/2. Medium/05. Job Sequencing Problem.cpp", "status": "approx", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_09__heaps_01. Implement min heap", "title": " Implement Min Heap", "a2z_path": "09. Heaps/1. Learning", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/1. Learning/01. Implement min heap.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_09__heaps_02. Check if array is heap", "title": " Check If Array Is Heap", "a2z_path": "09. Heaps/1. Learning", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/1. Learning/02. Check if array is heap.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_09__heaps_03. Convert min heap to max heap", "title": " Convert Min Heap To Max Heap", "a2z_path": "09. Heaps/1. Learning", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/1. Learning/03. Convert min heap to max heap.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_09__heaps_02. Minimum Cost to join n ropes", "title": " Minimum Cost To Join N Ropes", "a2z_path": "09. Heaps/3. Hard Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/3. Hard Problems/02. Minimum Cost to join n ropes.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_09__heaps_05. Arrange by rank", "title": " Arrange By Rank", "a2z_path": "09. Heaps/2. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/09. Heaps/2. Medium Problems/05. Arrange by rank.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_16__strings_(hard)_01. Minimum number of insertions to make parenthesis valid", "title": " Minimum Number Of Insertions To Make Parenthesis Valid", "a2z_path": "16. Strings (Hard)/Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/16. Strings (Hard)/Hard/01. Minimum number of insertions to make parenthesis valid.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_16__strings_(hard)_03. KMP or Z string matching algo", "title": " Kmp Or Z String Matching Algo", "a2z_path": "16. Strings (Hard)/Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/16. Strings (Hard)/Hard/03. KMP or Z string matching algo.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_15__tries_04. Bitwise basic operations", "title": " Bitwise Basic Operations", "a2z_path": "15. Tries/2. Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/15. Tries/2. Problems/04. Bitwise basic operations.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_15__tries_03. Count distinct subsitrings", "title": " Count Distinct Subsitrings", "a2z_path": "15. Tries/2. Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/15. Tries/2. Problems/03. Count distinct subsitrings.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_06. Level Order Traversal", "title": " Level Order Traversal", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/06. Level Order Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_01. Introduction to trees", "title": " Introduction To Trees", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/01. Introduction to trees.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_10. All in one traversal", "title": " All In One Traversal", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/10. All in one traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_05. Postorder Traversal", "title": " Postorder Traversal", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/05. Postorder Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_07. Iterative Preorder Traversal", "title": " Iterative Preorder Traversal", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/07. Iterative Preorder Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_03. Preorder Traversal", "title": " Preorder Traversal", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/03. Preorder Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_09. Iterative Postorder", "title": " Iterative Postorder", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/09. Iterative Postorder.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_08. Iterative Inorder Traversal", "title": " Iterative Inorder Traversal", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/08. Iterative Inorder Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_04. Inorder Traversal", "title": " Inorder Traversal", "a2z_path": "11. Binary Trees/1. Traversals", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/1. Traversals/04. Inorder Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_10. Bottom View", "title": " Bottom View", "a2z_path": "11. Binary Trees/2. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/10. Bottom View.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_06. Zig-Zag Traversal", "title": " Zig-Zag Traversal", "a2z_path": "11. Binary Trees/2. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/06. Zig-Zag Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_08. Vertical Order Traversal", "title": " Vertical Order Traversal", "a2z_path": "11. Binary Trees/2. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/08. Vertical Order Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_07. Boundary Traversal", "title": " Boundary Traversal", "a2z_path": "11. Binary Trees/2. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/07. Boundary Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_12. Symmetric Tree", "title": " Symmetric Tree", "a2z_path": "11. Binary Trees/2. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/12. Symmetric Tree.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_11. Left or Right View", "title": " Left Or Right View", "a2z_path": "11. Binary Trees/2. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/11. Left or Right View.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_09. Top View", "title": " Top View", "a2z_path": "11. Binary Trees/2. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/2. Medium Problems/09. Top View.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_05. All nodes at distance K", "title": " All Nodes At Distance K", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/05. All nodes at distance K.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_12. Morris Inorder Traversal", "title": " Morris Inorder Traversal", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/12. Morris Inorder Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_11. Morris Preorder Traversal", "title": " Morris Preorder Traversal", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/11. Morris Preorder Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_06. Min time to burn binary tree", "title": " Min Time To Burn Binary Tree", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/06. Min time to burn binary tree.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_07. Count nodes in complete binary tree", "title": " Count Nodes In Complete Binary Tree", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/07. Count nodes in complete binary tree.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_01. All root to leaf paths", "title": " All Root To Leaf Paths", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/01. All root to leaf paths.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_08. Construct BT from inorder and preorder", "title": " Construct Bt From Inorder And Preorder", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/08. Construct BT from inorder and preorder.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_09. Construct BT from inorder and postorder", "title": " Construct Bt From Inorder And Postorder", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/09. Construct BT from inorder and postorder.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_04. Check children sum property", "title": " Check Children Sum Property", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/04. Check children sum property.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_11__binary_trees_14. Serialize and Deserialize", "title": " Serialize And Deserialize", "a2z_path": "11. Binary Trees/3. Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/11. Binary Trees/3. Hard/14. Serialize and Deserialize.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_01_arrays_02.Sort_0_1_2", "title": "Sort 0 1 2", "a2z_path": "01.Arrays/2.Medium", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/2.Medium/02.Sort_0_1_2.cpp", "status": "missing", "approach_summary": "-> Initialize three pointers: low at the beginning of the array, mid at the beginning of the array, and high at the end of the array.\n-> Iterate through the array while the mid pointer is less than or equal to the high pointer:\n1. If the current element at the mid pointer is 0 (red), we swap it with the element at the low pointer and increment both low and mid pointers. This ensures that red elements are moved to the left side of the array.\n2. If the current element at the mid pointer is 1 (white), we simply increment the mid pointer. This keeps white elements in the middle of the array.\n3. If the current element at the mid pointer is 2 (blue), we swap it with the element at the high pointer and decrement the high pointer. This ensures that blue elements are moved to the right side of the array.\n\nRepeat step 2 until the mid pointer crosses the high pointer.\nAt the end of the algorithm, the array will be sorted in the desired order.", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_01_arrays_07.Rearange_elements_by_sign", "title": "Rearange Elements By Sign", "a2z_path": "01.Arrays/2.Medium", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/2.Medium/07.Rearange_elements_by_sign.cpp", "status": "missing", "approach_summary": "Initialize two pointers, pos_ptr and neg_ptr. pos_ptr will point to the first positive integer in the array, and neg_ptr will point to the first negative integer in the array.\nIterate over the array.\nIf the current integer is positive, swap it with the element at neg_ptr.\nIncrement pos_ptr by 1.\nIncrement neg_ptr by 1.\nRepeat steps 3-5 until the end of the array is reached.\nThe array will now be rearranged such that every consecutive pair of integers have opposite signs.", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_01_arrays_05.Largest_subarray_with_0sum", "title": "Largest Subarray With 0Sum", "a2z_path": "01.Arrays/3.Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/05.Largest_subarray_with_0sum.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_01_arrays_07.Merge_overlapping_subinterval", "title": "Merge Overlapping Subinterval", "a2z_path": "01.Arrays/3.Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/07.Merge_overlapping_subinterval.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_01_arrays_12.Maximum_product_subarray", "title": "Maximum Product Subarray", "a2z_path": "01.Arrays/3.Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/12.Maximum_product_subarray.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_01_arrays_08.Merge_2_sorted_array_without_space", "title": "Merge 2 Sorted Array Without Space", "a2z_path": "01.Arrays/3.Hard", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/3.Hard/08.Merge_2_sorted_array_without_space.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_01_arrays_01.Largest_element_in_array", "title": "Largest Element In Array", "a2z_path": "01.Arrays/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/01.Largest_element_in_array.cpp", "status": "missing", "approach_summary": "-> Intialize the ans with starting element\n-> Traverse the entire array and update the ans if the element is greater then ans\n-> Finally, return the ans", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_01_arrays_05.Rotate_array_left_by_1place", "title": "Rotate Array Left By 1Place", "a2z_path": "01.Arrays/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/05.Rotate_array_left_by_1place.cpp", "status": "missing", "approach_summary": "-> By observing we can the ans is the arr where arr[i] = arr[i+1] and at last place we will have arr[0]\n-> Before traversing store the arr[0] in temp and then traverse the array and make arr[i] = arr[i+1]\n-> Make arr[n-1] = arr[0], where n is the size of the array", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_01_arrays_02.Second_largest_element_in_array", "title": "Second Largest Element In Array", "a2z_path": "01.Arrays/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/02.Second_largest_element_in_array.cpp", "status": "missing", "approach_summary": null, "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_01_arrays_11.Max_consecutive_1's", "title": "Max Consecutive 1'S", "a2z_path": "01.Arrays/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/11.Max_consecutive_1's.cpp", "status": "missing", "approach_summary": "-> Traverse the entire array and within it run a loop while element's are equal to 1 and store the count\n-> Update the ans as max(ans,cnt)", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_01_arrays_13.Find_element_present_only_once", "title": "Find Element Present Only Once", "a2z_path": "01.Arrays/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/13.Find_element_present_only_once.cpp", "status": "missing", "approach_summary": "-> We can use XOR operation as we know xor cancles out the same elements\n-> Intial xr=0 then traverse the entire array and xor each element with xr\n-> Since only one element is present once and all other are present twice so the remaining element would be the\n    one which is present only once cause all other gets cancels out", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_01_arrays_03.Check_if_array_is_sorted_and_rotated", "title": "Check If Array Is Sorted And Rotated", "a2z_path": "01.Arrays/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/03.Check_if_array_is_sorted_and_rotated.cpp", "status": "missing", "approach_summary": "Compare all neignbour elements (a,b) in A,\nthe case of a > b can happen at most once.\n\nNote that the first element and the last element are also connected.\n\nIf all a <= b, A is already sorted so answer is true.\nIf all a <= b but only one a > b, and the first element is greater than equal to last element\nwe can rotate and make b the first element so answer is true.\nOther case, return false.", "time_complexity": "O(N)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_01_arrays_09.Union_of_2_sorted_arrays", "title": "Union Of 2 Sorted Arrays", "a2z_path": "01.Arrays/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/01.Arrays/1.Easy/09.Union_of_2_sorted_arrays.cpp", "status": "missing", "approach_summary": "-> Take two pointer i and j where i is for arr1 and j is for arr2 and traverse\n-> While travsersing 3 cases arises\n    -> arr1[ i ] == arr2[ j ]\n        Here we found a common element, so insert only one element in the union.\n        Let\u2019s insert arr[i] in union and whenever we insert element we increment pointer while pointer is not equal to the inserted element\n    -> arr1[i]<arr2[j]\n        Here insert arr[i]\n    -> arr1[i]>arr2[j]\n        Here insert arr2[j]\n-> Now check if elements of any array is left to traverse then traverse that array", "time_complexity": "O(N+M)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_05_recursion_10.Letter combinations of phone", "title": "Letter Combinations Of Phone", "a2z_path": "05.Recursion/2.Subsequences Pattern", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/10.Letter combinations of phone.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_05_recursion_01.Genereate all valid parenthesis", "title": "Genereate All Valid Parenthesis", "a2z_path": "05.Recursion/2.Subsequences Pattern", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/01.Genereate all valid parenthesis.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_05_recursion_03.Count distinct substrings", "title": "Count Distinct Substrings", "a2z_path": "05.Recursion/2.Subsequences Pattern", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/03.Count distinct substrings.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_05_recursion_04.Count subsets with sum equal to k", "title": "Count Subsets With Sum Equal To K", "a2z_path": "05.Recursion/2.Subsequences Pattern", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/04.Count subsets with sum equal to k.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_05_recursion_02.Power set", "title": "Power Set", "a2z_path": "05.Recursion/2.Subsequences Pattern", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/2.Subsequences Pattern/02.Power set.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_05_recursion_01.Implement_atoi_via_recursion", "title": "Implement Atoi Via Recursion", "a2z_path": "05.Recursion/1.Get Strong Hold", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/05.Recursion/1.Get Strong Hold/01.Implement_atoi_via_recursion.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_02. Kahn's Algorithm", "title": " Kahn'S Algorithm", "a2z_path": "13. Graphs/3. Topo Sort Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/3. Topo Sort Problems/02. Kahn's Algorithm.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_06. Alien Dictonary", "title": " Alien Dictonary", "a2z_path": "13. Graphs/3. Topo Sort Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/3. Topo Sort Problems/06. Alien Dictonary.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_01. Topological Sorting", "title": " Topological Sorting", "a2z_path": "13. Graphs/3. Topo Sort Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/3. Topo Sort Problems/01. Topological Sorting.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_02. Graph Representation", "title": " Graph Representation", "a2z_path": "13. Graphs/1. Learning", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/1. Learning/02. Graph Representation.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_01. Count the number of graphs", "title": " Count The Number Of Graphs", "a2z_path": "13. Graphs/1. Learning", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/1. Learning/01. Count the number of graphs.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_01. Bridges in graph", "title": " Bridges In Graph", "a2z_path": "13. Graphs/6. Other Algorithms", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/6. Other Algorithms/01. Bridges in graph.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_02. Strongly Connected Components", "title": " Strongly Connected Components", "a2z_path": "13. Graphs/6. Other Algorithms", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/6. Other Algorithms/02. Strongly Connected Components.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_01. Prim's Algorithm", "title": " Prim'S Algorithm", "a2z_path": "13. Graphs/5. MST Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/5. MST Problems/01. Prim's Algorithm.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_06. Number of islands 2", "title": " Number Of Islands 2", "a2z_path": "13. Graphs/5. MST Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/5. MST Problems/06. Number of islands 2.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_08. Swim in rising water", "title": " Swim In Rising Water", "a2z_path": "13. Graphs/5. MST Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/5. MST Problems/08. Swim in rising water.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_02. Kruskal's Algorithm", "title": " Kruskal'S Algorithm", "a2z_path": "13. Graphs/5. MST Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/5. MST Problems/02. Kruskal's Algorithm.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_10. Find city with smallest number of neighbours", "title": " Find City With Smallest Number Of Neighbours", "a2z_path": "13. Graphs/4. Shortest Path Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/10. Find city with smallest number of neighbours.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_01. Shortest path in Undirected Graph having unit distance", "title": " Shortest Path In Undirected Graph Having Unit Distance", "a2z_path": "13. Graphs/4. Shortest Path Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/01. Shortest path in Undirected Graph having unit distance.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_13__graphs_03. Dijkstra's Algorithm", "title": " Dijkstra'S Algorithm", "a2z_path": "13. Graphs/4. Shortest Path Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/13. Graphs/4. Shortest Path Problems/03. Dijkstra's Algorithm.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_3.Search_in_rowwise_sorted_matrix", "title": "Search In Rowwise Sorted Matrix", "a2z_path": "02.Binary Search/2D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/2D Arrays/3.Search_in_rowwise_sorted_matrix.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_1.Row_with_maximum_number_of_1's", "title": "Row With Maximum Number Of 1'S", "a2z_path": "02.Binary Search/2D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/2D Arrays/1.Row_with_maximum_number_of_1's.cpp", "status": "missing", "approach_summary": "-> We can use two pointer i and j which indicates current row and col\n-> As we know the matrix is row-wise sorted we can intilaize j=m-1 i.e. last col and i=0 i.e. first row\n-> Now, the idea is we will keep moving left j while we occur 1 and if 0 is found we will check in next row\n-> The last row where we encountered 1 will be our ans\n\n                {*0, *1, *1, *1}\n                {*0,  0,  1,  1}\nout of matrix  *{*1,  1,  1,  1} ---> ans\n                {0,  0,  0,  0}", "time_complexity": "O(N+M)", "space_complexity": "O(0)", "tags": []}
{"problem_id": "cpp_02_binary_search_02.Implement_lower_bound", "title": "Implement Lower Bound", "a2z_path": "02.Binary Search/1D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/02.Implement_lower_bound.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_07.Number_of_occurences", "title": "Number Of Occurences", "a2z_path": "02.Binary Search/1D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/07.Number_of_occurences.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_11.Find_the_minimum_element_in_sorted_rotated_array", "title": "Find The Minimum Element In Sorted Rotated Array", "a2z_path": "02.Binary Search/1D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/11.Find_the_minimum_element_in_sorted_rotated_array.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_05.Check_If_array_is_sorted", "title": "Check If Array Is Sorted", "a2z_path": "02.Binary Search/1D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/05.Check_If_array_is_sorted.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_13.Find_how_many_times_array_is_rotated", "title": "Find How Many Times Array Is Rotated", "a2z_path": "02.Binary Search/1D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/13.Find_how_many_times_array_is_rotated.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_01.Find_x_in_sorted_array", "title": "Find X In Sorted Array", "a2z_path": "02.Binary Search/1D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/01.Find_x_in_sorted_array.cpp", "status": "missing", "approach_summary": "1. Initialize low as 0 and high as the last index of the array.\n2. Iterate using a while loop until low is less than or equal to high.\n3. Calculate the middle index using the formula mid = low + (high - low) / 2.\n4. Compare the target value with the element at the middle index:\n   - If they are equal, return the middle index.\n   - If the target is less than the element, update high to mid - 1 and continue the search in the left half.\n   - If the target is greater than the element, update low to mid + 1 and continue the search in the right half.\n5. If the target is not found, return -1.", "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_03.Implement_lower_upper_bound", "title": "Implement Lower Upper Bound", "a2z_path": "02.Binary Search/1D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/03.Implement_lower_upper_bound.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_10.Search_in_rotated_sorted_array_with_duplicates", "title": "Search In Rotated Sorted Array With Duplicates", "a2z_path": "02.Binary Search/1D Arrays", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/1D Arrays/10.Search_in_rotated_sorted_array_with_duplicates.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_05.Find_smallest_integer", "title": "Find Smallest Integer", "a2z_path": "02.Binary Search/In Search Space", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/05.Find_smallest_integer.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_01.Square_root_of_number", "title": "Square Root Of Number", "a2z_path": "02.Binary Search/In Search Space", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/01.Square_root_of_number.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_04.Minimum_days_to_make_boquets", "title": "Minimum Days To Make Boquets", "a2z_path": "02.Binary Search/In Search Space", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/04.Minimum_days_to_make_boquets.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_02_binary_search_14.Kth_element_of_two_sorted_arrays", "title": "Kth Element Of Two Sorted Arrays", "a2z_path": "02.Binary Search/In Search Space", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/02.Binary Search/In Search Space/14.Kth_element_of_two_sorted_arrays.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_03_strings_05.Count_the_number_of_substrings_with_k_unique_characters", "title": "Count The Number Of Substrings With K Unique Characters", "a2z_path": "03.Strings/2.Medium", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/2.Medium/05.Count_the_number_of_substrings_with_k_unique_characters.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_03_strings_02.Max_nesting_depth_of_parenthesis", "title": "Max Nesting Depth Of Parenthesis", "a2z_path": "03.Strings/2.Medium", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/2.Medium/02.Max_nesting_depth_of_parenthesis.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_03_strings_06.Check_for_rotated_string", "title": "Check For Rotated String", "a2z_path": "03.Strings/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/1.Easy/06.Check_for_rotated_string.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_03_strings_05.Isomorphic_string", "title": "Isomorphic String", "a2z_path": "03.Strings/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/1.Easy/05.Isomorphic_string.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_03_strings_02.Reverse_words_in_string", "title": "Reverse Words In String", "a2z_path": "03.Strings/1.Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/03.Strings/1.Easy/02.Reverse_words_in_string.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_02.Inserting_node_to_linked_list", "title": "Inserting Node To Linked List", "a2z_path": "04.Linked List/1. Single Linked List", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/1. Single Linked List/02.Inserting_node_to_linked_list.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_01.Intro_to_linked_list", "title": "Intro To Linked List", "a2z_path": "04.Linked List/1. Single Linked List", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/1. Single Linked List/01.Intro_to_linked_list.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_04.Count_the_number_of_nodes_linked_list", "title": "Count The Number Of Nodes Linked List", "a2z_path": "04.Linked List/1. Single Linked List", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/1. Single Linked List/04.Count_the_number_of_nodes_linked_list.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_02.Rotate_LL_k_times", "title": "Rotate Ll K Times", "a2z_path": "04.Linked List/5.Hard Promblems of LL", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/5.Hard Promblems of LL/02.Rotate_LL_k_times.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_03.Copy_LL_with_random_pointers", "title": "Copy Ll With Random Pointers", "a2z_path": "04.Linked List/5.Hard Promblems of LL", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/5.Hard Promblems of LL/03.Copy_LL_with_random_pointers.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_11.Sort_0_1_2_in_LL", "title": "Sort 0 1 2 In Ll", "a2z_path": "04.Linked List/3.Medium Problems of LL", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/11.Sort_0_1_2_in_LL.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_12.Add_1_to_LL", "title": "Add 1 To Ll", "a2z_path": "04.Linked List/3.Medium Problems of LL", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/12.Add_1_to_LL.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_01.Find_mid_of_LL", "title": "Find Mid Of Ll", "a2z_path": "04.Linked List/3.Medium Problems of LL", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/01.Find_mid_of_LL.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_05.Count_nodes_in_loop", "title": "Count Nodes In Loop", "a2z_path": "04.Linked List/3.Medium Problems of LL", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/05.Count_nodes_in_loop.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_03.Detect_loop_in_LL", "title": "Detect Loop In Ll", "a2z_path": "04.Linked List/3.Medium Problems of LL", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/3.Medium Problems of LL/03.Detect_loop_in_LL.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_04_linked_list_01.Introduction_to_Double_LL", "title": "Introduction To Double Ll", "a2z_path": "04.Linked List/2.Doubly Linked List", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/04.Linked List/2.Doubly Linked List/01.Introduction_to_Double_LL.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_02. Count the number of substrings with exactly K unique characters", "title": " Count The Number Of Substrings With Exactly K Unique Characters", "a2z_path": "08. Sliding Window/2. Hard Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/2. Hard Problems/02. Count the number of substrings with exactly K unique characters.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_01. Longest Substring with at most K unique characters", "title": " Longest Substring With At Most K Unique Characters", "a2z_path": "08. Sliding Window/2. Hard Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/2. Hard Problems/01. Longest Substring with at most K unique characters.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_07. Number of Substrings Containing all 3 characters", "title": " Number Of Substrings Containing All 3 Characters", "a2z_path": "08. Sliding Window/1. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/1. Medium Problems/07. Number of Substrings Containing all 3 characters.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_03. Fruit into Baskets", "title": " Fruit Into Baskets", "a2z_path": "08. Sliding Window/1. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/1. Medium Problems/03. Fruit into Baskets.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_04. Longest Repeating Character", "title": " Longest Repeating Character", "a2z_path": "08. Sliding Window/1. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/1. Medium Problems/04. Longest Repeating Character.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_08. Maximum Points you can obtaln form the card", "title": " Maximum Points You Can Obtaln Form The Card", "a2z_path": "08. Sliding Window/1. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/1. Medium Problems/08. Maximum Points you can obtaln form the card.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_02. Max Consecutive 1's", "title": " Max Consecutive 1'S", "a2z_path": "08. Sliding Window/1. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/1. Medium Problems/02. Max Consecutive 1's.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_06. Count the number of nice subarrays", "title": " Count The Number Of Nice Subarrays", "a2z_path": "08. Sliding Window/1. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/1. Medium Problems/06. Count the number of nice subarrays.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_08__sliding_window_01. Longest Substring Without Repeating Characters", "title": " Longest Substring Without Repeating Characters", "a2z_path": "08. Sliding Window/1. Medium Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/08. Sliding Window/1. Medium Problems/01. Longest Substring Without Repeating Characters.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_07_stack_and_queues_03. Celebrity Problem", "title": " Celebrity Problem", "a2z_path": "07.Stack and Queues/4. Implementation", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/4. Implementation/03. Celebrity Problem.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_07_stack_and_queues_02. Implement queue using array", "title": " Implement Queue Using Array", "a2z_path": "07.Stack and Queues/1. Learning", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/1. Learning/02. Implement queue using array.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_07_stack_and_queues_01. Next Greater Element", "title": " Next Greater Element", "a2z_path": "07.Stack and Queues/3. Monotonic Stack and Queue", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/01. Next Greater Element.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_07_stack_and_queues_03. Previous Smaller Element", "title": " Previous Smaller Element", "a2z_path": "07.Stack and Queues/3. Monotonic Stack and Queue", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/07.Stack and Queues/3. Monotonic Stack and Queue/03. Previous Smaller Element.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_10. Two Sum in BST", "title": " Two Sum In Bst", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/10. Two Sum in BST.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_03. Insert into BST", "title": " Insert Into Bst", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/03. Insert into BST.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_11. Recover BST", "title": " Recover Bst", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/11. Recover BST.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_09. BST Iterator", "title": " Bst Iterator", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/09. BST Iterator.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_08. Build BST from Preorder Traversal", "title": " Build Bst From Preorder Traversal", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/08. Build BST from Preorder Traversal.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_07. LCA in BST", "title": " Lca In Bst", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/07. LCA in BST.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_02. Floor in BST", "title": " Floor In Bst", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/02. Floor in BST.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_04. Delete from BST", "title": " Delete From Bst", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/04. Delete from BST.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_01. Ceil in BST", "title": " Ceil In Bst", "a2z_path": "12. Binary Search Trees/2. Practice Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/2. Practice Problems/01. Ceil in BST.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_12__binary_search_trees_03. Minimum value in BST", "title": " Minimum Value In Bst", "a2z_path": "12. Binary Search Trees/1. Concept", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/12. Binary Search Trees/1. Concept/03. Minimum value in BST.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_10__greedy_approach_04. Valid Parenthesis String", "title": " Valid Parenthesis String", "a2z_path": "10. Greedy Approach/1. Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/1. Easy/04. Valid Parenthesis String.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_10__greedy_approach_03. Lemonade Exchange", "title": " Lemonade Exchange", "a2z_path": "10. Greedy Approach/1. Easy", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/1. Easy/03. Lemonade Exchange.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_10__greedy_approach_04. Minimum Platforms", "title": " Minimum Platforms", "a2z_path": "10. Greedy Approach/2. Medium", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/10. Greedy Approach/2. Medium/04. Minimum Platforms.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_01. Longest Increasing Subsequence", "title": " Longest Increasing Subsequence", "a2z_path": "14. Dynamic Programming/7. DP on LIS", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/7. DP on LIS/01. Longest Increasing Subsequence.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_04. Longest Bitonic Subsequence", "title": " Longest Bitonic Subsequence", "a2z_path": "14. Dynamic Programming/7. DP on LIS", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/7. DP on LIS/04. Longest Bitonic Subsequence.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_03. Best time to buy and sell stock upto 2 transaction", "title": " Best Time To Buy And Sell Stock Upto 2 Transaction", "a2z_path": "14. Dynamic Programming/6. DP on Stocks", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/6. DP on Stocks/03. Best time to buy and sell stock upto 2 transaction.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_01. Best time to buy and sell stocks", "title": " Best Time To Buy And Sell Stocks", "a2z_path": "14. Dynamic Programming/6. DP on Stocks", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/6. DP on Stocks/01. Best time to buy and sell stocks.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_05. Buy and sell stocks with cooldown", "title": " Buy And Sell Stocks With Cooldown", "a2z_path": "14. Dynamic Programming/6. DP on Stocks", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/6. DP on Stocks/05. Buy and sell stocks with cooldown.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_04. Best time to buy and sell stock uoto k transaction", "title": " Best Time To Buy And Sell Stock Uoto K Transaction", "a2z_path": "14. Dynamic Programming/6. DP on Stocks", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/6. DP on Stocks/04. Best time to buy and sell stock uoto k transaction.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_06. Buy and sell stocks with transaction fee", "title": " Buy And Sell Stocks With Transaction Fee", "a2z_path": "14. Dynamic Programming/6. DP on Stocks", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/6. DP on Stocks/06. Buy and sell stocks with transaction fee.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_05. Partition with given difference", "title": " Partition With Given Difference", "a2z_path": "14. Dynamic Programming/4. DP on Subsequences", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/05. Partition with given difference.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_02. Partition array in two equal sum subsets", "title": " Partition Array In Two Equal Sum Subsets", "a2z_path": "14. Dynamic Programming/4. DP on Subsequences", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/02. Partition array in two equal sum subsets.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_10. Unbounded Knapsack", "title": " Unbounded Knapsack", "a2z_path": "14. Dynamic Programming/4. DP on Subsequences", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/10. Unbounded Knapsack.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_04. Count number of subsets with sum K", "title": " Count Number Of Subsets With Sum K", "a2z_path": "14. Dynamic Programming/4. DP on Subsequences", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/4. DP on Subsequences/04. Count number of subsets with sum K.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_02. Print the LCS", "title": " Print The Lcs", "a2z_path": "14. Dynamic Programming/5. DP on Strings", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/5. DP on Strings/02. Print the LCS.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_08. Distinct Subsequences", "title": " Distinct Subsequences", "a2z_path": "14. Dynamic Programming/5. DP on Strings", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/5. DP on Strings/08. Distinct Subsequences.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_01. Maximal Square", "title": " Maximal Square", "a2z_path": "14. Dynamic Programming/9. DP on Squares", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/9. DP on Squares/01. Maximal Square.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_03. Burst Ballons", "title": " Burst Ballons", "a2z_path": "14. Dynamic Programming/8. DP on Partition", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/8. DP on Partition/03. Burst Ballons.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_06. Partition array for maximum sum", "title": " Partition Array For Maximum Sum", "a2z_path": "14. Dynamic Programming/8. DP on Partition", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/8. DP on Partition/06. Partition array for maximum sum.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_05. Palindorme Partionting 2", "title": " Palindorme Partionting 2", "a2z_path": "14. Dynamic Programming/8. DP on Partition", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/8. DP on Partition/05. Palindorme Partionting 2.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_01. Find the nth fibonacci number", "title": " Find The Nth Fibonacci Number", "a2z_path": "14. Dynamic Programming/1. Intro to DP", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/1. Intro to DP/01. Find the nth fibonacci number.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_14__dynamic_programming_03. Frog K Jumps", "title": " Frog K Jumps", "a2z_path": "14. Dynamic Programming/2. 1D DP", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/14. Dynamic Programming/2. 1D DP/03. Frog K Jumps.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_04. Prime factorization using Sieve", "title": " Prime Factorization Using Sieve", "a2z_path": "06.Bit Manipulation/3. Advanced Maths", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/3. Advanced Maths/04. Prime factorization using Sieve.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_05. Fast Power", "title": " Fast Power", "a2z_path": "06.Bit Manipulation/3. Advanced Maths", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/3. Advanced Maths/05. Fast Power.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_01. Prime factors of number", "title": " Prime Factors Of Number", "a2z_path": "06.Bit Manipulation/3. Advanced Maths", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/3. Advanced Maths/01. Prime factors of number.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_02. Exceptionally odd", "title": " Exceptionally Odd", "a2z_path": "06.Bit Manipulation/2. Interview Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/2. Interview Problems/02. Exceptionally odd.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_01. Minimum bit flips", "title": " Minimum Bit Flips", "a2z_path": "06.Bit Manipulation/2. Interview Problems", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/2. Interview Problems/01. Minimum bit flips.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_07.Divide two numbers using bit maipulation", "title": "Divide Two Numbers Using Bit Maipulation", "a2z_path": "06.Bit Manipulation/1. Learn Bit Manipulation", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/1. Learn Bit Manipulation/07.Divide two numbers using bit maipulation.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_06.Swap two numbers without temporary variable", "title": "Swap Two Numbers Without Temporary Variable", "a2z_path": "06.Bit Manipulation/1. Learn Bit Manipulation", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/1. Learn Bit Manipulation/06.Swap two numbers without temporary variable.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_01.Bit Manipulation", "title": "Bit Manipulation", "a2z_path": "06.Bit Manipulation/1. Learn Bit Manipulation", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/1. Learn Bit Manipulation/01.Bit Manipulation.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_08.Count set bit from numbers 1 to n", "title": "Count Set Bit From Numbers 1 To N", "a2z_path": "06.Bit Manipulation/1. Learn Bit Manipulation", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/1. Learn Bit Manipulation/08.Count set bit from numbers 1 to n.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_04.Check for the power of 2", "title": "Check For The Power Of 2", "a2z_path": "06.Bit Manipulation/1. Learn Bit Manipulation", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/1. Learn Bit Manipulation/04.Check for the power of 2.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
{"problem_id": "cpp_06_bit_manipulation_03.Check for odd even", "title": "Check For Odd Even", "a2z_path": "06.Bit Manipulation/1. Learn Bit Manipulation", "links": [], "python_file_path": null, "cpp_file_path": "/home/chiranjeet/dev/dsa/Strivers-A2Z-DSA-Sheet/06.Bit Manipulation/1. Learn Bit Manipulation/03.Check for odd even.cpp", "status": "missing", "approach_summary": null, "time_complexity": null, "space_complexity": null, "tags": []}
